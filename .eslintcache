[{"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\index.tsx":"1","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\reportWebVitals.ts":"2","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Taskbar\\Taskbar.tsx":"3","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\Desktop.tsx":"4","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\App\\App.tsx":"5","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\LeftMenu.tsx":"6","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Toolbar\\Toolbar.tsx":"7","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\CenterMenu\\CenterMenu.tsx":"8","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\RightMenu\\RightMenu.tsx":"9","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Clock\\Clock.tsx":"10","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Calendar\\Calendar.tsx":"11","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Weather\\Weather.tsx":"12","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Music\\Music.tsx":"13","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Redux\\appSlice.tsx":"14","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Redux\\store.tsx":"15","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Search\\Search.tsx":"16","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Toolbar\\Watch\\Watch.tsx":"17","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Toolbar\\Settings\\Settings.tsx":"18","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Sliders\\Sliders.tsx":"19","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\WindowView\\WindowView.tsx":"20","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Taskbar\\Gradients.tsx":"21"},{"size":648,"mtime":1610726901641,"results":"22","hashOfConfig":"23"},{"size":440,"mtime":1609954721851,"results":"24","hashOfConfig":"23"},{"size":2844,"mtime":1614439915864,"results":"25","hashOfConfig":"23"},{"size":477,"mtime":1614196549776,"results":"26","hashOfConfig":"23"},{"size":339,"mtime":1609958890077,"results":"27","hashOfConfig":"23"},{"size":681,"mtime":1614022212960,"results":"28","hashOfConfig":"23"},{"size":516,"mtime":1611260034942,"results":"29","hashOfConfig":"23"},{"size":191,"mtime":1614207873092,"results":"30","hashOfConfig":"23"},{"size":165,"mtime":1609959036140,"results":"31","hashOfConfig":"23"},{"size":1787,"mtime":1610298568799,"results":"32","hashOfConfig":"23"},{"size":1925,"mtime":1611254146998,"results":"33","hashOfConfig":"23"},{"size":4124,"mtime":1610377584008,"results":"34","hashOfConfig":"23"},{"size":10729,"mtime":1611253620518,"results":"35","hashOfConfig":"23"},{"size":715,"mtime":1614439891682,"results":"36","hashOfConfig":"23"},{"size":178,"mtime":1610724617803,"results":"37","hashOfConfig":"23"},{"size":1130,"mtime":1611257832402,"results":"38","hashOfConfig":"23"},{"size":668,"mtime":1611259838309,"results":"39","hashOfConfig":"23"},{"size":472,"mtime":1611260592462,"results":"40","hashOfConfig":"23"},{"size":2517,"mtime":1614117326931,"results":"41","hashOfConfig":"23"},{"size":3587,"mtime":1614443780893,"results":"42","hashOfConfig":"23"},{"size":378,"mtime":1614437986523,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"12rywrt",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\index.tsx",[],["92","93"],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\reportWebVitals.ts",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Taskbar\\Taskbar.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\Desktop.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\App\\App.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\LeftMenu.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Toolbar\\Toolbar.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\CenterMenu\\CenterMenu.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\RightMenu\\RightMenu.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Clock\\Clock.tsx",["94","95","96","97","98","99","100","101","102"],"import React, { useEffect, useState } from 'react'\r\nimport './Clock.sass'\r\n\r\nfunction Clock() {\r\n    const [date, setDate] = useState(new Date)\r\n    enum WeekDays {\r\n        Monday = 'Monday',\r\n        Tuesday = 'Tuesday',\r\n        Wednesday = 'Wednesday',\r\n        Thursday = 'Thursday',\r\n        Friday = 'Friday',\r\n        Saturday = 'Saturday',\r\n        Sunday = 'Sunday'\r\n    }\r\n\r\n    const checkDay = (day: number): string => {\r\n        switch (day) {\r\n            case 0:\r\n                return WeekDays.Sunday;\r\n                break;\r\n            case 1:\r\n                return WeekDays.Monday;\r\n                break;\r\n            case 2:\r\n                return WeekDays.Tuesday;\r\n                break;\r\n            case 3:\r\n                return WeekDays.Wednesday;\r\n                break;\r\n            case 4:\r\n                return WeekDays.Thursday;\r\n                break;\r\n            case 5:\r\n                return WeekDays.Friday;\r\n                break;\r\n            case 6:\r\n                return WeekDays.Saturday;\r\n                break;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => setDate(new Date), 1000);\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='clock'>\r\n            <div className='clock-time'>\r\n                <p className='clock-time-hours'>{date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()}</p>\r\n                <p className='clock-time-minutes'>{date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()}</p>\r\n            </div>\r\n            <p className='clock-day'>{checkDay(date.getDay())}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Calendar\\Calendar.tsx",["103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { useState } from 'react'\r\nimport './Calendar.sass'\r\n\r\nfunction Calendar() {\r\n    const [date, setDate] = useState(new Date)\r\n\r\n    enum Months {\r\n        January = 'Jan',\r\n        February = 'Feb',\r\n        March = 'Mar',\r\n        April = 'Apr',\r\n        May = 'May',\r\n        June = 'Jun',\r\n        July = 'Jul',\r\n        August = 'Aug',\r\n        September = 'Sep',\r\n        October = 'Oct',\r\n        November = 'Nov',\r\n        December = 'Dec'\r\n    }\r\n\r\n    const CheckMonth = (month: number): string => {\r\n        switch (month) {\r\n            case 0:\r\n                return Months.January;\r\n                break;\r\n            case 1:\r\n                return Months.February;\r\n                break;\r\n            case 2:\r\n                return Months.March;\r\n                break;\r\n            case 3:\r\n                return Months.April;\r\n                break;\r\n            case 4:\r\n                return Months.May;\r\n                break;\r\n            case 5:\r\n                return Months.June;\r\n                break;\r\n            case 6:\r\n                return Months.July;\r\n                break;\r\n            case 7:\r\n                return Months.August;\r\n                break;\r\n            case 8:\r\n                return Months.September;\r\n                break;\r\n            case 9:\r\n                return Months.October;\r\n                break;\r\n            case 10:\r\n                return Months.November;\r\n                break;\r\n            case 11:\r\n                return Months.December;\r\n                break;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    return (\r\n        <div className='calendar'>\r\n            <div className='calendar-day'>{date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}</div>\r\n            <div className='calendar-month'>{CheckMonth(date.getMonth())}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar\r\n","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Weather\\Weather.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Music\\Music.tsx",["117","118","119","120","121","122"],"import React, { useState, useEffect } from 'react'\r\nimport './Music.sass'\r\nimport { ImSpotify } from 'react-icons/im';\r\nimport { IoIosSkipBackward, IoIosSkipForward, IoIosPlay, IoIosPause } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectTokenSpotify, setSpotifyAPI } from '../../../../Redux/appSlice'\r\n\r\nfunction Music() {\r\n    const [playState, setPlayState] = useState(false);\r\n    const [playPause, setPlayPause] = useState(true);\r\n    const [song, setSong] = useState({\r\n        title: '',\r\n        artist: '',\r\n        cover: '',\r\n        playlist: '',\r\n    });\r\n    const [code, setCode] = useState('');\r\n    const [deviceId, setDeviceId] = useState('');\r\n    const token = useSelector(selectTokenSpotify);\r\n    const dispatch = useDispatch();\r\n\r\n    const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\r\n    const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\r\n    const redirectURL = 'http://localhost:3000/callback';\r\n\r\n    const Login = () => {\r\n        const scopes = 'user-read-recently-played streaming user-read-email user-read-private user-read-currently-playing user-read-playback-state user-modify-playback-state user-library-read';\r\n        window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId +\r\n            (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\r\n    }\r\n\r\n    const loadSpotifyPlayer = () => {\r\n        const player = new Spotify.Player({\r\n            name: 'Web Playback SDK Quick Start Player',\r\n            getOAuthToken: cb => { cb(token) },\r\n\r\n        });\r\n\r\n\r\n        // Error handling\r\n        player.addListener('initialization_error', ({ message }) => { console.error(message); });\r\n        player.addListener('authentication_error', ({ message }) => { console.error(message); });\r\n        player.addListener('account_error', ({ message }) => { console.error(message); });\r\n        player.addListener('playback_error', ({ message }) => { console.error(message); });\r\n\r\n        // Playback status updates\r\n        player.addListener('player_state_changed', state => { console.log(state); });\r\n\r\n        // Ready\r\n        player.addListener('ready', ({ device_id }) => {\r\n            console.log('Ready with Device ID', device_id);\r\n            setDeviceId(device_id);\r\n        });\r\n\r\n        // Not Ready\r\n        player.addListener('not_ready', ({ device_id }) => {\r\n            console.log('Device ID has gone offline', device_id);\r\n        });\r\n\r\n\r\n\r\n        // Connect to the player!\r\n        player.connect();\r\n    }\r\n\r\n    const _getToken = () => {\r\n        if (code) {\r\n            const result = fetch('https://accounts.spotify.com/api/token', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n                },\r\n                body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectURL}`,\r\n            }).then(res => res.json()).then((data) => { dispatch(setSpotifyAPI({ tokenSpotify: data.access_token })) })\r\n        }\r\n    }\r\n\r\n    const getNowSong = async () => {\r\n        const result = await fetch(`https://api.spotify.com/v1/me/player`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n        }).then(res => res.json()).then(data => { setSong({ ...song, title: data.item.name, artist: data.item.artists[0].name, cover: data.item.album.images[1].url }) });\r\n    }\r\n\r\n    const getRecentlyPlayed = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/recently-played?limit=1`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(res => res.json()).then((data) => { console.log(data); setSong({ ...song, playlist: data.items[0].context.uri }) })\r\n\r\n    }\r\n\r\n    const getUserDevices = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/devices`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(res => res.json()).then(data => console.log(data))\r\n    }\r\n\r\n    const getUserPlaylists = async () => {\r\n        await fetch(`https://api.spotify.com/v1/playlists/${song.playlist.split(':')[2]}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(res => res.json()).then((data) => { console.log(data); setSong({ ...song, title: data.tracks.items[0].track.name, artist: data.tracks.items[0].track.artists[0].name, cover: data.tracks.items[0].track.album.images[1].url }) })\r\n    }\r\n\r\n    const playbackPause = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/pause?device_id=${deviceId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n    }\r\n\r\n    const playbackStartFirst = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            body: JSON.stringify({\r\n                context_uri: song.playlist,\r\n            })\r\n        })\r\n    }\r\n\r\n    const playbackStart = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n        })\r\n    }\r\n\r\n    const playbackNext = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/next?device_id=${deviceId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        setTimeout(() => getNowSong(), 200);\r\n        setPlayPause(false);\r\n    }\r\n\r\n    const playbackBackward = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/previous?device_id=${deviceId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        setTimeout(() => getNowSong(), 200);\r\n        setPlayPause(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let hash = document.URL.split('=')[1];\r\n        setCode(hash);\r\n        _getToken();\r\n    }, [code]);\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            loadSpotifyPlayer();\r\n            getRecentlyPlayed();\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        if (song.playlist) getUserPlaylists();\r\n    }, [song.playlist])\r\n\r\n    return (\r\n        <div className='music'>\r\n            {\r\n                token ?\r\n                    <div className='music-loggedin'>\r\n                        <div className='music-loggedin-image' onClick={() => { getUserPlaylists() }}>\r\n                            {\r\n                                song.cover ?\r\n                                    <img src={song.cover} />\r\n                                    :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                        <div className='music-loggedin-info'>\r\n                            <div className='music-loggedin-info-title'>\r\n                                {\r\n                                    song.title.length > 12 ?\r\n                                        <>\r\n                                            <p className='music-loggedin-info-title-textscroll' style={{ animation: `music ${song.title.length * (3 / 4)}s linear infinite` }}>{song.title}</p>\r\n                                            <p className='music-loggedin-info-title-textscrollrepeat' style={{ animation: `musicRepeat ${song.title.length * (3 / 4)}s linear ${song.title.length * ((3 / 4) / 2)}s infinite` }}>{song.title}</p>\r\n                                        </>\r\n                                        :\r\n                                        <p className='music-loggedin-info-title-text' onClick={getRecentlyPlayed}>{song.title}</p>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className='music-loggedin-info-player'>\r\n                                <IoIosSkipBackward className='music-loggedin-info-player-backward' onClick={() => { playbackBackward(); }} />\r\n                                {\r\n                                    playPause ?\r\n                                        playState ?\r\n                                            <IoIosPlay className='music-loggedin-info-player-play' onClick={() => { playbackStart(); setPlayPause(!playPause); console.log(playState) }} />\r\n                                            :\r\n                                            <IoIosPlay className='music-loggedin-info-player-play' onClick={() => { playbackStartFirst(); setPlayPause(!playPause); setPlayState(true); console.log(playState) }} />\r\n\r\n                                        :\r\n                                        <IoIosPause className='music-loggedin-info-player-pause' onClick={() => { playbackPause(); setPlayPause(!playPause) }} />\r\n                                }\r\n\r\n                                <IoIosSkipForward className='music-loggedin-info-player-forward' onClick={() => { playbackNext(); }} />\r\n                            </div>\r\n                            <div className='music-loggedin-info-artist' onClick={getUserDevices}>\r\n                                <p className='music-loggedin-info-artist-text'>{song.artist}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n                    <div className='music-loggedout'>\r\n                        <div className='music-loggedout-icon' onClick={() => { console.log(token) }}>\r\n                            <ImSpotify />\r\n                        </div>\r\n                        <div className='music-loggedout-button' onClick={() => { Login() }}>\r\n                            Log in\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Redux\\appSlice.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Redux\\store.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Search\\Search.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Toolbar\\Watch\\Watch.tsx",["123","124"],"import React, { useState, useEffect } from 'react'\r\nimport './Watch.sass'\r\nimport { FiClock } from 'react-icons/fi';\r\n\r\nfunction Watch() {\r\n    const [date, setDate] = useState(new Date)\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(() => setDate(new Date), 1000);\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className='watch'>\r\n            <FiClock />\r\n            {date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()}\r\n                :\r\n            {date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Watch\r\n","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Toolbar\\Settings\\Settings.tsx",[],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\LeftMenu\\Bricks\\Sliders\\Sliders.tsx",["125","126"],"import React, { useState } from 'react'\r\nimport './Sliders.sass'\r\nimport { FiHeadphones, FiSun, FiCpu, FiBatteryCharging } from 'react-icons/fi';\r\n\r\nfunction Sliders() {\r\n    const [volume, setVolume] = useState('50');\r\n    const [brightness, setBrightness] = useState(1);\r\n    const [memory, setMemory] = useState('50');\r\n    const [battery, setBattery] = useState('50');\r\n\r\n    const brightnessCheck = (e: any) => {\r\n        let value = parseFloat(e.target.value);\r\n        setBrightness(value)\r\n        console.log(value)\r\n    }\r\n\r\n    return (\r\n        <div className='sliders'>\r\n            <div className='screenbright' style={{ background: `rgba(0, 0, 0, ${1 - (brightness + 0.25)})` }}></div>\r\n            <div className='sliders-volume'>\r\n                <FiHeadphones className='sliders-volume-icon' />\r\n                <div className='sliders-volume-level'>\r\n                    <input className='sliders-volume-level-slider' type='range' min='0' max='100' step='1' onChange={(e) => { setVolume(e.target.value) }}></input>\r\n                    <div className='sliders-volume-level-cover' style={{ width: volume + '%' }}></div>\r\n                </div>\r\n            </div>\r\n            <div className='sliders-brightness'>\r\n                <FiSun className='sliders-brightness-icon' />\r\n                <div className='sliders-brightness-level'>\r\n                    <input className='sliders-brightness-level-slider' type='range' min='0.00' max='1' step='0.01' onChange={(e) => brightnessCheck(e)}></input>\r\n                    <div className='sliders-brightness-level-cover' style={{ width: brightness * 100 + '%' }}></div>\r\n                </div>\r\n            </div>\r\n            <div className='sliders-memory'>\r\n                <FiCpu className='sliders-memory-icon' />\r\n                <div className='sliders-memory-level'>\r\n                    <div className='sliders-memory-level-slider'></div>\r\n                    <div className='sliders-memory-level-cover' style={{ width: memory + '%' }}></div>\r\n                </div>\r\n            </div>\r\n            <div className='sliders-battery'>\r\n                <FiBatteryCharging className='sliders-battery-icon' />\r\n                <div className='sliders-battery-level'>\r\n                    <div className='sliders-battery-level-slider'></div>\r\n                    <div className='sliders-battery-level-cover' style={{ width: battery + '%' }}></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Sliders\r\n","C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Desktop\\WindowView\\WindowView.tsx",["127","128","129","130","131"],"C:\\Users\\eryko\\Desktop\\ReactProjects\\computer-system\\src\\Taskbar\\Gradients.tsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":38,"nodeType":"138","messageId":"139","endLine":5,"endColumn":46,"fix":"140"},{"ruleId":"141","severity":1,"message":"142","line":20,"column":17,"nodeType":"143","messageId":"144","endLine":20,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":23,"column":17,"nodeType":"143","messageId":"144","endLine":23,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":26,"column":17,"nodeType":"143","messageId":"144","endLine":26,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":29,"column":17,"nodeType":"143","messageId":"144","endLine":29,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":32,"column":17,"nodeType":"143","messageId":"144","endLine":32,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":35,"column":17,"nodeType":"143","messageId":"144","endLine":35,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":38,"column":17,"nodeType":"143","messageId":"144","endLine":38,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":45,"column":50,"nodeType":"138","messageId":"139","endLine":45,"endColumn":58,"fix":"145"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":18,"nodeType":"148","messageId":"149","endLine":5,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":5,"column":38,"nodeType":"138","messageId":"139","endLine":5,"endColumn":46,"fix":"150"},{"ruleId":"141","severity":1,"message":"142","line":26,"column":17,"nodeType":"143","messageId":"144","endLine":26,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":29,"column":17,"nodeType":"143","messageId":"144","endLine":29,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":32,"column":17,"nodeType":"143","messageId":"144","endLine":32,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":35,"column":17,"nodeType":"143","messageId":"144","endLine":35,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":38,"column":17,"nodeType":"143","messageId":"144","endLine":38,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":41,"column":17,"nodeType":"143","messageId":"144","endLine":41,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":44,"column":17,"nodeType":"143","messageId":"144","endLine":44,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":47,"column":17,"nodeType":"143","messageId":"144","endLine":47,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":50,"column":17,"nodeType":"143","messageId":"144","endLine":50,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":53,"column":17,"nodeType":"143","messageId":"144","endLine":53,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":56,"column":17,"nodeType":"143","messageId":"144","endLine":56,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":59,"column":17,"nodeType":"143","messageId":"144","endLine":59,"endColumn":23},{"ruleId":"146","severity":1,"message":"151","line":68,"column":19,"nodeType":"148","messageId":"149","endLine":68,"endColumn":25},{"ruleId":"146","severity":1,"message":"151","line":80,"column":15,"nodeType":"148","messageId":"149","endLine":80,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":178,"column":8,"nodeType":"154","endLine":178,"endColumn":14,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"156","line":185,"column":8,"nodeType":"154","endLine":185,"endColumn":15,"suggestions":"157"},{"ruleId":"152","severity":1,"message":"158","line":189,"column":8,"nodeType":"154","endLine":189,"endColumn":23,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":199,"column":37,"nodeType":"162","endLine":199,"endColumn":61},{"ruleId":"136","severity":1,"message":"137","line":6,"column":38,"nodeType":"138","messageId":"139","endLine":6,"endColumn":46,"fix":"163"},{"ruleId":"136","severity":1,"message":"137","line":9,"column":50,"nodeType":"138","messageId":"139","endLine":9,"endColumn":58,"fix":"164"},{"ruleId":"146","severity":1,"message":"165","line":8,"column":20,"nodeType":"148","messageId":"149","endLine":8,"endColumn":29},{"ruleId":"146","severity":1,"message":"166","line":9,"column":21,"nodeType":"148","messageId":"149","endLine":9,"endColumn":31},{"ruleId":"146","severity":1,"message":"167","line":3,"column":22,"nodeType":"148","messageId":"149","endLine":3,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":23,"column":31,"nodeType":"170","messageId":"171","endLine":23,"endColumn":33},{"ruleId":"152","severity":1,"message":"172","line":30,"column":11,"nodeType":"173","endLine":34,"endColumn":6},{"ruleId":"152","severity":1,"message":"174","line":50,"column":8,"nodeType":"154","endLine":50,"endColumn":40,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"169","line":62,"column":47,"nodeType":"170","messageId":"171","endLine":62,"endColumn":49},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"178","text":"179"},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode",{"range":"180","text":"179"},"@typescript-eslint/no-unused-vars","'setDate' is assigned a value but never used.","Identifier","unusedVar",{"range":"181","text":"179"},"'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_getToken'. Either include it or remove the dependency array.","ArrayExpression",["182"],"React Hook useEffect has missing dependencies: 'getRecentlyPlayed' and 'loadSpotifyPlayer'. Either include them or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'getUserPlaylists'. Either include it or remove the dependency array.",["184"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"185","text":"179"},{"range":"186","text":"179"},"'setMemory' is assigned a value but never used.","'setBattery' is assigned a value but never used.","'IoMdSquareOutline' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","The 'handleCardMove' function makes the dependencies of useEffect Hook (at line 44) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleCardMove' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'screenMode'. Either include it or remove the dependency array. You can also do a functional update 'setScreenMode(s => ...)' if you only need 'screenMode' in the 'setScreenMode' call.",["187"],"no-global-assign","no-unsafe-negation",[142,142],"()",[1219,1219],[137,137],{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},[185,185],[270,270],{"desc":"194","fix":"195"},"Update the dependencies array to be: [_getToken, code]",{"range":"196","text":"197"},"Update the dependencies array to be: [getRecentlyPlayed, loadSpotifyPlayer, token]",{"range":"198","text":"199"},"Update the dependencies array to be: [getUserPlaylists, song.playlist]",{"range":"200","text":"201"},"Update the dependencies array to be: [screenMode.display, folderOpen, screenMode]",{"range":"202","text":"203"},[6910,6916],"[_getToken, code]",[7053,7060],"[getRecentlyPlayed, loadSpotifyPlayer, token]",[7143,7158],"[getUserPlaylists, song.playlist]",[1958,1990],"[screenMode.display, folderOpen, screenMode]"]