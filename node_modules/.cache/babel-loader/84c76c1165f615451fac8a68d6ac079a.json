{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\WindowView\\\\WindowView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './WindowView.sass';\nimport { IoMdRemove, IoMdSquareOutline, IoMdClose } from 'react-icons/io';\n\nfunction WindowView() {\n  _s();\n\n  const [display, setDisplay] = useState('flex');\n  const [maximize, setMaximize] = useState('50%');\n  const [positionX, setPositionX] = useState('50%');\n  const [positionY, setPositionY] = useState('50%');\n  const [isCardMoving, setIsCardMoving] = useState(false);\n\n  const windowSize = () => {\n    if (maximize == '50%') setMaximize('100%');else setMaximize('50%');\n  };\n\n  const handleCardMove = useCallback(event => {\n    console.log({\n      x: event.offsetX,\n      y: event.offsetY\n    });\n    setPositionX(event.offsetX);\n    setPositionY(event.offsetY);\n    ele.addEventListener('mousedown', function (e) {\n      // Get the target\n      const target = e.target; // Get the bounding rectangle of target\n\n      const rect = target.getBoundingClientRect(); // Mouse position\n\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n    });\n  }, []);\n  useEffect(() => {\n    if (isCardMoving) window.addEventListener(\"mousemove\", handleCardMove);else window.removeEventListener(\"mousemove\", handleCardMove);\n    return () => window.removeEventListener(\"mousemove\", handleCardMove);\n  }, [isCardMoving, handleCardMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"windowview\",\n    style: {\n      display: display,\n      width: maximize,\n      height: maximize,\n      top: positionY,\n      left: positionX\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-toolbar\",\n      onMouseDown: () => setIsCardMoving(true),\n      onMouseUp: () => setIsCardMoving(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"windowview-toolbar-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-minimize\",\n          onClick: () => setDisplay('none'),\n          children: /*#__PURE__*/_jsxDEV(IoMdRemove, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-maximize\",\n          onClick: () => windowSize(),\n          children: /*#__PURE__*/_jsxDEV(IoMdSquareOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-close\",\n          onClick: () => setDisplay('none'),\n          children: /*#__PURE__*/_jsxDEV(IoMdClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WindowView, \"yJxHXghvUgSQSh9bXQ+ZF/dJRyc=\");\n\n_c = WindowView;\nexport default WindowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowView\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/WindowView/WindowView.tsx"],"names":["React","useCallback","useEffect","useState","IoMdRemove","IoMdSquareOutline","IoMdClose","WindowView","display","setDisplay","maximize","setMaximize","positionX","setPositionX","positionY","setPositionY","isCardMoving","setIsCardMoving","windowSize","handleCardMove","event","console","log","x","offsetX","y","offsetY","ele","addEventListener","e","target","rect","getBoundingClientRect","clientX","left","clientY","top","window","removeEventListener","width","height"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport './WindowView.sass'\r\nimport { IoMdRemove, IoMdSquareOutline, IoMdClose } from 'react-icons/io';\r\n\r\nfunction WindowView() {\r\n    const [display, setDisplay] = useState('flex')\r\n    const [maximize, setMaximize] = useState('50%')\r\n    const [positionX, setPositionX] = useState('50%')\r\n    const [positionY, setPositionY] = useState('50%')\r\n    const [isCardMoving, setIsCardMoving] = useState(false);\r\n\r\n    const windowSize = () => {\r\n        if (maximize == '50%') setMaximize('100%')\r\n        else setMaximize('50%')\r\n    }\r\n\r\n    const handleCardMove = useCallback((event) => {\r\n        console.log({ x: event.offsetX, y: event.offsetY });\r\n        setPositionX(event.offsetX)\r\n        setPositionY(event.offsetY)\r\n        ele.addEventListener('mousedown', function (e) {\r\n            // Get the target\r\n            const target = e.target;\r\n\r\n            // Get the bounding rectangle of target\r\n            const rect = target.getBoundingClientRect();\r\n\r\n            // Mouse position\r\n            const x = e.clientX - rect.left;\r\n            const y = e.clientY - rect.top;\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isCardMoving) window.addEventListener(\"mousemove\", handleCardMove);\r\n        else window.removeEventListener(\"mousemove\", handleCardMove);\r\n        return () => window.removeEventListener(\"mousemove\", handleCardMove);\r\n    }, [isCardMoving, handleCardMove]);\r\n\r\n    return (\r\n        <div className='windowview' style={{ display: display, width: maximize, height: maximize, top: positionY, left: positionX }}>\r\n            <div className='windowview-toolbar' onMouseDown={() => setIsCardMoving(true)} onMouseUp={() => setIsCardMoving(false)}>\r\n                <div></div>\r\n                <div className='windowview-toolbar-buttons'>\r\n                    <div className='windowview-toolbar-buttons-minimize' onClick={() => setDisplay('none')}>\r\n                        <IoMdRemove />\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-maximize' onClick={() => windowSize()}>\r\n                        <IoMdSquareOutline />\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-close' onClick={() => setDisplay('none')}>\r\n                        <IoMdClose />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='windowview-body'>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WindowView\r\n"]},"metadata":{},"sourceType":"module"}