{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\LeftMenu\\\\Bricks\\\\Music\\\\Music.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Music.sass';\nimport { ImSpotify } from 'react-icons/im';\nimport { useSelector } from 'react-redux';\nimport { selectTokenSpotify } from '../../../Redux/appSlice';\n\nfunction Music() {\n  _s();\n\n  const [ref_token, setRefToken] = useState();\n  const [name, setName] = useState();\n  const [code, setCode] = useState('');\n  const token = useSelector(selectTokenSpotify);\n  const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\n  const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\n  const redirectURL = 'http://localhost:3000/callback';\n\n  const Login = () => {\n    const scopes = 'user-read-private user-read-email user-read-currently-playing user-read-playback-state';\n    window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId + (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\n  }; // const getToken = async () => {\n  //     const result = await fetch('https://accounts.spotify.com/api/token', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/x-www-form-urlencoded',\n  //             'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n  //         },\n  //         body: {\n  //             'grant_type': 'authorization_code',\n  //             'code': '/authorize endpoint',\n  //             'redirect_uri': \n  //         }\n  //     });\n  //     const data = await result.json();\n  //     return data.access_token;\n  // }\n\n\n  const _getToken = async () => {\n    if (code) {\n      const result = await fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n        },\n        body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectURL}`\n      }).then(res => res.json()).then(data => {\n        setToken(data.access_token);\n        setRefToken(data.refresh_token);\n        console.log(data);\n      });\n    }\n  };\n\n  const getNowSong = async () => {\n    const result = await fetch(`https://api.spotify.com/v1/me/player`, {\n      method: 'GET',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + token\n      } //scopes: 'user-read-currently-playing',\n\n    }).then(res => res.json()).then(data => console.log(data.item.name)).catch(e => e.message);\n  };\n\n  const _getTrack = async () => {\n    const result = await fetch(`https://api.spotify.com/v1/tracks/6hTcRuSaaTNwlyIYkkMpWX`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(res => res.json()).then(data => {\n      setName(data.name);\n    });\n    console.log(name);\n  };\n\n  useEffect(() => {\n    let hash = document.URL.split('=')[1];\n    setCode(hash);\n\n    _getToken();\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music\",\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedin\",\n      children: \"Logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-icon\",\n        onClick: () => {\n          console.log(token);\n        },\n        children: /*#__PURE__*/_jsxDEV(ImSpotify, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-button\",\n        onClick: () => Login(),\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: getNowSong,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Music, \"Z0Ka7C3QWd/CWADjJcEcJrK/xAk=\", false, function () {\n  return [useSelector];\n});\n\n_c = Music;\nexport default Music;\n\nvar _c;\n\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/LeftMenu/Bricks/Music/Music.tsx"],"names":["React","useState","useEffect","ImSpotify","useSelector","selectTokenSpotify","Music","ref_token","setRefToken","name","setName","code","setCode","token","clientId","clientSecret","redirectURL","Login","scopes","window","location","href","encodeURIComponent","_getToken","result","fetch","method","headers","btoa","body","then","res","json","data","setToken","access_token","refresh_token","console","log","getNowSong","item","catch","e","message","_getTrack","hash","document","URL","split"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Music.sass'\r\nimport { ImSpotify } from 'react-icons/im';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectTokenSpotify } from '../../../Redux/appSlice'\r\n\r\nfunction Music() {\r\n    const [ref_token, setRefToken] = useState();\r\n    const [name, setName] = useState();\r\n    const [code, setCode] = useState('');\r\n    const token = useSelector(selectTokenSpotify);\r\n\r\n    const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\r\n    const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\r\n    const redirectURL = 'http://localhost:3000/callback';\r\n\r\n\r\n\r\n    const Login = () => {\r\n        const scopes = 'user-read-private user-read-email user-read-currently-playing user-read-playback-state';\r\n        window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId +\r\n            (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\r\n    }\r\n\r\n    // const getToken = async () => {\r\n\r\n    //     const result = await fetch('https://accounts.spotify.com/api/token', {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/x-www-form-urlencoded',\r\n    //             'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n    //         },\r\n    //         body: {\r\n    //             'grant_type': 'authorization_code',\r\n    //             'code': '/authorize endpoint',\r\n    //             'redirect_uri': \r\n    //         }\r\n    //     });\r\n    //     const data = await result.json();\r\n    //     return data.access_token;\r\n    // }\r\n    const _getToken = async () => {\r\n        if (code) {\r\n            const result = await fetch('https://accounts.spotify.com/api/token', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n                },\r\n                body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectURL}`,\r\n            }).then(res => res.json()).then((data) => { setToken(data.access_token); setRefToken(data.refresh_token); console.log(data) })\r\n        }\r\n    }\r\n\r\n    const getNowSong = async () => {\r\n\r\n        const result = await fetch(`https://api.spotify.com/v1/me/player`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            //scopes: 'user-read-currently-playing',\r\n        }).then(res => res.json()).then(data => console.log(data.item.name)).catch(e => e.message);\r\n    }\r\n\r\n    const _getTrack = async () => {\r\n        const result = await fetch(`https://api.spotify.com/v1/tracks/6hTcRuSaaTNwlyIYkkMpWX`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(res => res.json()).then(data => { setName(data.name) })\r\n        console.log(name);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let hash = document.URL.split('=')[1];\r\n        setCode(hash);\r\n        _getToken();\r\n    }, [code]);\r\n\r\n    return (\r\n        <div className='music'>\r\n            {\r\n                token ?\r\n                    <div className='music-loggedin'>\r\n                        Logged in\r\n                    </div>\r\n                    :\r\n                    <div className='music-loggedout'>\r\n                        <div className='music-loggedout-icon' onClick={() => { console.log(token) }}>\r\n                            <ImSpotify />\r\n                        </div>\r\n                        <div className='music-loggedout-button' onClick={() => Login()}>\r\n                            Log in\r\n                        </div>\r\n                        <div onClick={getNowSong}>\r\n                            1\r\n                        </div>\r\n                        <div>\r\n                            2\r\n                        </div>\r\n                        <div>\r\n                            3\r\n                        </div>\r\n                        <div>\r\n                            {name}\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n"]},"metadata":{},"sourceType":"module"}