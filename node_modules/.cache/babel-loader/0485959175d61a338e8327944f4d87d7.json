{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    tokenSpotify: '',\n    spotifyOpen: false,\n    folderOpen: false,\n    user: false\n  },\n  reducers: {\n    setSpotify: (state, action) => {\n      state.tokenSpotify = action.payload.tokenSpotify;\n    },\n    setWindowsOpen: (state, action) => {\n      state.folderOpen = action.payload.folderOpen;\n      state.spotifyOpen = action.payload.spotifyOpen;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload.user;\n    }\n  }\n});\nexport const {\n  setSpotify,\n  setFolder,\n  setUser\n} = appSlice.actions;\nexport const selectTokenSpotify = state => state.app.tokenSpotify;\nexport const selectFolderOpen = state => state.app.folderOpen;\nexport const selectSpotifyOpen = state => state.app.spotifyOpen;\nexport const selectUser = state => state.app.user;\nexport default appSlice.reducer;","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Redux/appSlice.tsx"],"names":["createSlice","appSlice","name","initialState","tokenSpotify","spotifyOpen","folderOpen","user","reducers","setSpotify","state","action","payload","setWindowsOpen","setUser","setFolder","actions","selectTokenSpotify","app","selectFolderOpen","selectSpotifyOpen","selectUser","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;AAChCE,EAAAA,IAAI,EAAE,KAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,YAAY,EAAE,EADJ;AAEVC,IAAAA,WAAW,EAAE,KAFH;AAGVC,IAAAA,UAAU,EAAE,KAHF;AAIVC,IAAAA,IAAI,EAAE;AAJI,GAFkB;AAQhCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAAP,CAAeR,YAApC;AAEH,KAJK;AAKNS,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACJ,UAAN,GAAmBK,MAAM,CAACC,OAAP,CAAeN,UAAlC;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAAP,CAAeP,WAAnC;AACH,KARK;AASNS,IAAAA,OAAO,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACH,IAAN,GAAaI,MAAM,CAACC,OAAP,CAAeL,IAA5B;AACH;AAXK;AARsB,CAAD,CAA5B;AAuBP,OAAO,MAAM;AAAEE,EAAAA,UAAF;AAAcM,EAAAA,SAAd;AAAyBD,EAAAA;AAAzB,IAAqCb,QAAQ,CAACe,OAApD;AAEP,OAAO,MAAMC,kBAAkB,GAAIP,KAAD,IAAgBA,KAAK,CAACQ,GAAN,CAAUd,YAArD;AAEP,OAAO,MAAMe,gBAAgB,GAAIT,KAAD,IAAgBA,KAAK,CAACQ,GAAN,CAAUZ,UAAnD;AACP,OAAO,MAAMc,iBAAiB,GAAIV,KAAD,IAAgBA,KAAK,CAACQ,GAAN,CAAUb,WAApD;AAEP,OAAO,MAAMgB,UAAU,GAAIX,KAAD,IAAgBA,KAAK,CAACQ,GAAN,CAAUX,IAA7C;AAGP,eAAeN,QAAQ,CAACqB,OAAxB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        tokenSpotify: '',\r\n        spotifyOpen: false,\r\n        folderOpen: false,\r\n        user: false,\r\n    },\r\n    reducers: {\r\n        setSpotify: (state, action) => {\r\n            state.tokenSpotify = action.payload.tokenSpotify;\r\n\r\n        },\r\n        setWindowsOpen: (state, action) => {\r\n            state.folderOpen = action.payload.folderOpen;\r\n            state.spotifyOpen = action.payload.spotifyOpen;\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload.user;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setSpotify, setFolder, setUser } = appSlice.actions;\r\n\r\nexport const selectTokenSpotify = (state: any) => state.app.tokenSpotify;\r\n\r\nexport const selectFolderOpen = (state: any) => state.app.folderOpen;\r\nexport const selectSpotifyOpen = (state: any) => state.app.spotifyOpen;\r\n\r\nexport const selectUser = (state: any) => state.app.user;\r\n\r\n\r\nexport default appSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}