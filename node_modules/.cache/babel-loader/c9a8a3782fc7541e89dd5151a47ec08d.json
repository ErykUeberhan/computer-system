{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\WindowView\\\\WindowView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './WindowView.sass';\nimport { IoMdRemove, IoMdClose } from 'react-icons/io';\nimport { BiWindows, BiWindow } from 'react-icons/bi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFolderOpen, setFolderOpen } from '../../Redux/appSlice';\n\nfunction WindowView() {\n  _s();\n\n  const folderOpen = useSelector(selectFolderOpen);\n  const [screenMode, setScreenMode] = useState({\n    display: 'none',\n    height: '50',\n    width: '50',\n    top: 220,\n    left: 480,\n    border: '1px'\n  });\n  const [off, setOff] = useState({\n    x: 10,\n    y: 10\n  });\n  const [isWindowMoving, setIsWindowMoving] = useState(false);\n  const [isWindowResizeing, setIsWindowResizeing] = useState(false);\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n\n  const windowSize = () => {\n    if (screenMode.height == '50') {\n      setScreenMode({ ...screenMode,\n        height: '100',\n        width: '100',\n        top: 0,\n        left: 0,\n        border: '0px'\n      });\n    } else {\n      setScreenMode({ ...screenMode,\n        height: '50',\n        width: '50',\n        top: 220,\n        left: 480,\n        border: '1px'\n      });\n    }\n  };\n\n  const handleWindowMove = event => {\n    let x = event.clientX - off.x;\n    let y = event.clientY - off.y;\n    setScreenMode({ ...screenMode,\n      top: y,\n      left: x\n    });\n  };\n\n  const handleWindowResize = event => {\n    //console.log(ref.current.offsetWidth)\n    let x = ref.current.offsetWidth - off.x;\n    let y = event.clientY - off.y;\n    setScreenMode({ ...screenMode,\n      height: String(y),\n      width: String(x)\n    });\n  };\n\n  const getMoveMouse = e => {\n    setOff({\n      x: e.nativeEvent.offsetX,\n      y: e.nativeEvent.offsetY\n    });\n  };\n\n  const getResizeMouse = e => {\n    setOff({\n      x: e.nativeEvent.offsetX,\n      y: e.nativeEvent.offsetY\n    });\n    console.log(off);\n  };\n\n  useEffect(() => {\n    if (isWindowMoving) window.addEventListener(\"mousemove\", handleWindowMove);else window.removeEventListener(\"mousemove\", handleWindowMove);\n    return () => window.removeEventListener(\"mousemove\", handleWindowMove);\n  }, [isWindowMoving, handleWindowMove]);\n  useEffect(() => {\n    if (isWindowResizeing) window.addEventListener(\"mousemove\", handleWindowResize);else window.removeEventListener(\"mousemove\", handleWindowResize);\n    return () => window.removeEventListener(\"mousemove\", handleWindowResize);\n  }, [isWindowResizeing, handleWindowResize]);\n  useEffect(() => {\n    if (folderOpen) setScreenMode({ ...screenMode,\n      display: 'flex'\n    });else setScreenMode({ ...screenMode,\n      display: 'none'\n    });\n    return () => setScreenMode({ ...screenMode,\n      display: 'none'\n    });\n  }, [screenMode.display, folderOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"windowview\",\n    ref: ref,\n    style: {\n      display: screenMode.display,\n      height: screenMode.height + 'px',\n      width: screenMode.width + 'px',\n      top: screenMode.top + 'px',\n      left: screenMode.left + 'px',\n      borderWidth: screenMode.border\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-toolbar\",\n      onMouseDown: e => {\n        getMoveMouse(e);\n        setIsWindowMoving(true);\n      },\n      onMouseUp: () => {\n        setIsWindowMoving(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"windowview-toolbar-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-minimize\",\n          onClick: () => {\n            dispatch(setFolderOpen({\n              folderOpen: !folderOpen\n            }));\n          },\n          onMouseDown: e => {\n            e.stopPropagation();\n          },\n          children: /*#__PURE__*/_jsxDEV(IoMdRemove, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-maximize\",\n          onClick: () => windowSize(),\n          onMouseDown: e => {\n            e.stopPropagation();\n          },\n          children: screenMode.height == '100' ? /*#__PURE__*/_jsxDEV(BiWindows, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(BiWindow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-close\",\n          onClick: () => {\n            dispatch(setFolderOpen({\n              folderOpen: !folderOpen\n            }));\n          },\n          onMouseDown: e => {\n            e.stopPropagation();\n          },\n          children: /*#__PURE__*/_jsxDEV(IoMdClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-scale\",\n      onMouseDown: e => {\n        getResizeMouse(e);\n        setIsWindowResizeing(true);\n      },\n      onMouseUp: () => {\n        setIsWindowResizeing(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WindowView, \"TLNp27p9gPzd0gMMHrDmCSg7kRk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = WindowView;\nexport default WindowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowView\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/WindowView/WindowView.tsx"],"names":["React","useEffect","useRef","useState","IoMdRemove","IoMdClose","BiWindows","BiWindow","useDispatch","useSelector","selectFolderOpen","setFolderOpen","WindowView","folderOpen","screenMode","setScreenMode","display","height","width","top","left","border","off","setOff","x","y","isWindowMoving","setIsWindowMoving","isWindowResizeing","setIsWindowResizeing","dispatch","ref","windowSize","handleWindowMove","event","clientX","clientY","handleWindowResize","current","offsetWidth","String","getMoveMouse","e","nativeEvent","offsetX","offsetY","getResizeMouse","console","log","window","addEventListener","removeEventListener","borderWidth","stopPropagation"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport './WindowView.sass'\r\nimport { IoMdRemove, IoMdSquareOutline, IoMdClose } from 'react-icons/io';\r\nimport { BiWindows, BiWindow } from 'react-icons/bi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectFolderOpen, setFolderOpen } from '../../Redux/appSlice';\r\n\r\nfunction WindowView() {\r\n    const folderOpen = useSelector(selectFolderOpen)\r\n    const [screenMode, setScreenMode] = useState({\r\n        display: 'none',\r\n        height: '50',\r\n        width: '50',\r\n        top: 220,\r\n        left: 480,\r\n        border: '1px'\r\n    })\r\n    const [off, setOff] = useState({ x: 10, y: 10 })\r\n    const [isWindowMoving, setIsWindowMoving] = useState(false);\r\n    const [isWindowResizeing, setIsWindowResizeing] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const ref = useRef<HTMLElement>(null)\r\n    const windowSize = () => {\r\n        if (screenMode.height == '50') {\r\n            setScreenMode({ ...screenMode, height: '100', width: '100', top: 0, left: 0, border: '0px' })\r\n        } else {\r\n            setScreenMode({ ...screenMode, height: '50', width: '50', top: 220, left: 480, border: '1px' })\r\n        }\r\n    }\r\n\r\n    const handleWindowMove = (event: any) => {\r\n        let x = event.clientX - off.x;\r\n        let y = event.clientY - off.y;\r\n        setScreenMode({ ...screenMode, top: y, left: x })\r\n    };\r\n\r\n    const handleWindowResize = (event: any) => {\r\n        //console.log(ref.current.offsetWidth)\r\n        let x = ref.current.offsetWidth - off.x;\r\n        let y = event.clientY - off.y;\r\n        setScreenMode({ ...screenMode, height: String(y), width: String(x) })\r\n    };\r\n\r\n    const getMoveMouse = (e: any) => {\r\n        setOff({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY })\r\n    }\r\n\r\n    const getResizeMouse = (e: any) => {\r\n        setOff({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY })\r\n        console.log(off)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isWindowMoving) window.addEventListener(\"mousemove\", handleWindowMove);\r\n        else window.removeEventListener(\"mousemove\", handleWindowMove);\r\n        return () => window.removeEventListener(\"mousemove\", handleWindowMove);\r\n    }, [isWindowMoving, handleWindowMove]);\r\n\r\n    useEffect(() => {\r\n        if (isWindowResizeing) window.addEventListener(\"mousemove\", handleWindowResize);\r\n        else window.removeEventListener(\"mousemove\", handleWindowResize);\r\n        return () => window.removeEventListener(\"mousemove\", handleWindowResize);\r\n    }, [isWindowResizeing, handleWindowResize]);\r\n\r\n    useEffect(() => {\r\n        if (folderOpen) setScreenMode({ ...screenMode, display: 'flex' });\r\n        else setScreenMode({ ...screenMode, display: 'none' });\r\n        return () => setScreenMode({ ...screenMode, display: 'none' });\r\n    }, [screenMode.display, folderOpen]);\r\n\r\n    return (\r\n        <div className='windowview' ref={ref} style={{ display: screenMode.display, height: screenMode.height + 'px', width: screenMode.width + 'px', top: screenMode.top + 'px', left: screenMode.left + 'px', borderWidth: screenMode.border }}>\r\n            <div className='windowview-toolbar' onMouseDown={(e) => { getMoveMouse(e); setIsWindowMoving(true) }} onMouseUp={() => { setIsWindowMoving(false) }}>\r\n                <div></div>\r\n                <div className='windowview-toolbar-buttons'>\r\n                    <div className='windowview-toolbar-buttons-minimize' onClick={() => { dispatch(setFolderOpen({ folderOpen: !folderOpen })) }} onMouseDown={(e) => { e.stopPropagation() }}>\r\n                        <IoMdRemove />\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-maximize' onClick={() => windowSize()} onMouseDown={(e) => { e.stopPropagation() }}>\r\n                        {\r\n                            screenMode.height == '100' ?\r\n                                <BiWindows /> :\r\n                                <BiWindow />\r\n                        }\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-close' onClick={() => { dispatch(setFolderOpen({ folderOpen: !folderOpen })) }} onMouseDown={(e) => { e.stopPropagation() }}>\r\n                        <IoMdClose />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='windowview-body'>\r\n\r\n            </div>\r\n            <div className='windowview-scale' onMouseDown={(e) => { getResizeMouse(e); setIsWindowResizeing(true) }} onMouseUp={() => { setIsWindowResizeing(false) }}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WindowView\r\n"]},"metadata":{},"sourceType":"module"}