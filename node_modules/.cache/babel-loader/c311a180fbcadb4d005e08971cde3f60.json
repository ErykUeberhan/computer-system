{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\WindowView\\\\WindowView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport './WindowView.sass';\nimport { IoMdRemove, IoMdSquareOutline, IoMdClose } from 'react-icons/io';\n\nfunction WindowView() {\n  _s();\n\n  const [display, setDisplay] = useState('flex');\n  const [maximize, setMaximize] = useState('50%');\n  const [position, setPosition] = useState({\n    x: 600,\n    y: 600\n  });\n  const [off, setOff] = useState({\n    x: 10,\n    y: 10\n  });\n  const [isCardMoving, setIsCardMoving] = useState(false);\n\n  const windowSize = () => {\n    if (maximize == '50%') setMaximize('100%');else setMaximize('50%');\n  };\n\n  const handleCardMove = useCallback(event => {\n    // console.log({ x: event.clientX, y: event.clientY });\n    let x = event.clientX - off['x'];\n    let y = event.clientY - off['y']; // console.log({ bx: x, by: y });\n\n    setPosition({\n      x: x,\n      y: y\n    });\n    console.log({\n      x: off['x'],\n      y: off['y']\n    });\n  }, []);\n\n  const getMouse = e => {\n    console.log(e.offsetX); // setOff({ x: e.offsetX, y: e.offsetY })\n    // console.log({ x: off['x'], y: off['y'] });\n  };\n\n  const relativeCoords = event => {\n    let bounds = event.target.getBoundingClientRect();\n    let x = event.clientX - bounds.left;\n    let y = event.clientY - bounds.top;\n  };\n\n  useEffect(() => {\n    if (isCardMoving) window.addEventListener(\"mousemove\", handleCardMove);else window.removeEventListener(\"mousemove\", handleCardMove);\n    return () => window.removeEventListener(\"mousemove\", handleCardMove);\n  }, [isCardMoving, handleCardMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"windowview\",\n    style: {\n      display: display,\n      width: maximize,\n      height: maximize,\n      top: position['y'] + 'px',\n      left: position['x'] + 'px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-toolbar\",\n      onClick: e => {\n        getMouse(e);\n        setIsCardMoving(!isCardMoving);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"windowview-toolbar-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-minimize\",\n          onClick: () => setDisplay('none'),\n          children: /*#__PURE__*/_jsxDEV(IoMdRemove, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-maximize\",\n          onClick: () => windowSize(),\n          children: /*#__PURE__*/_jsxDEV(IoMdSquareOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-close\",\n          onClick: () => setDisplay('none'),\n          children: /*#__PURE__*/_jsxDEV(IoMdClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WindowView, \"Oj/UPSTjcHYfeZ2cJtGJosgbjCA=\");\n\n_c = WindowView;\nexport default WindowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowView\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/WindowView/WindowView.tsx"],"names":["React","useCallback","useEffect","useState","IoMdRemove","IoMdSquareOutline","IoMdClose","WindowView","display","setDisplay","maximize","setMaximize","position","setPosition","x","y","off","setOff","isCardMoving","setIsCardMoving","windowSize","handleCardMove","event","clientX","clientY","console","log","getMouse","e","offsetX","relativeCoords","bounds","target","getBoundingClientRect","left","top","window","addEventListener","removeEventListener","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,EAAqBC,iBAArB,EAAwCC,SAAxC,QAAyD,gBAAzD;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AAAEW,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE;AAAb,GAAD,CAAxC;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC;AAAEW,IAAAA,CAAC,EAAE,EAAL;AAASC,IAAAA,CAAC,EAAE;AAAZ,GAAD,CAA9B;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMiB,UAAU,GAAG,MAAM;AACrB,QAAIV,QAAQ,IAAI,KAAhB,EAAuBC,WAAW,CAAC,MAAD,CAAX,CAAvB,KACKA,WAAW,CAAC,KAAD,CAAX;AACR,GAHD;;AAKA,QAAMU,cAAc,GAAGpB,WAAW,CAAEqB,KAAD,IAAW;AAC1C;AAEA,QAAIR,CAAC,GAAGQ,KAAK,CAACC,OAAN,GAAgBP,GAAG,CAAC,GAAD,CAA3B;AACA,QAAID,CAAC,GAAGO,KAAK,CAACE,OAAN,GAAgBR,GAAG,CAAC,GAAD,CAA3B,CAJ0C,CAK1C;;AACAH,IAAAA,WAAW,CAAC;AAAEC,MAAAA,CAAC,EAAEA,CAAL;AAAQC,MAAAA,CAAC,EAAEA;AAAX,KAAD,CAAX;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEZ,MAAAA,CAAC,EAAEE,GAAG,CAAC,GAAD,CAAR;AAAeD,MAAAA,CAAC,EAAEC,GAAG,CAAC,GAAD;AAArB,KAAZ;AACH,GARiC,EAQ/B,EAR+B,CAAlC;;AAUA,QAAMW,QAAQ,GAAIC,CAAD,IAAY;AACzBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,OAAd,EADyB,CAEzB;AACA;AACH,GAJD;;AAKA,QAAMC,cAAc,GAAIR,KAAD,IAAgB;AACnC,QAAIS,MAAM,GAAGT,KAAK,CAACU,MAAN,CAAaC,qBAAb,EAAb;AACA,QAAInB,CAAC,GAAGQ,KAAK,CAACC,OAAN,GAAgBQ,MAAM,CAACG,IAA/B;AACA,QAAInB,CAAC,GAAGO,KAAK,CAACE,OAAN,GAAgBO,MAAM,CAACI,GAA/B;AACH,GAJD;;AAMAjC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,YAAJ,EAAkBkB,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqChB,cAArC,EAAlB,KACKe,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCjB,cAAxC;AACL,WAAO,MAAMe,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCjB,cAAxC,CAAb;AACH,GAJQ,EAIN,CAACH,YAAD,EAAeG,cAAf,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAEb,MAAAA,OAAO,EAAEA,OAAX;AAAoB+B,MAAAA,KAAK,EAAE7B,QAA3B;AAAqC8B,MAAAA,MAAM,EAAE9B,QAA7C;AAAuDyB,MAAAA,GAAG,EAAEvB,QAAQ,CAAC,GAAD,CAAR,GAAgB,IAA5E;AAAkFsB,MAAAA,IAAI,EAAEtB,QAAQ,CAAC,GAAD,CAAR,GAAgB;AAAxG,KAAnC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,OAAO,EAAGgB,CAAD,IAAO;AAAED,QAAAA,QAAQ,CAACC,CAAD,CAAR;AAAaT,QAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AAAgC,OAAnG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAqD,UAAA,OAAO,EAAE,MAAMT,UAAU,CAAC,MAAD,CAA9E;AAAA,iCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAqD,UAAA,OAAO,EAAE,MAAMW,UAAU,EAA9E;AAAA,iCACI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAC,kCAAf;AAAkD,UAAA,OAAO,EAAE,MAAMX,UAAU,CAAC,MAAD,CAA3E;AAAA,iCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA5DQF,U;;KAAAA,U;AA8DT,eAAeA,UAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport './WindowView.sass'\r\nimport { IoMdRemove, IoMdSquareOutline, IoMdClose } from 'react-icons/io';\r\n\r\nfunction WindowView() {\r\n    const [display, setDisplay] = useState('flex')\r\n    const [maximize, setMaximize] = useState('50%')\r\n    const [position, setPosition] = useState({ x: 600, y: 600 })\r\n    const [off, setOff] = useState({ x: 10, y: 10 })\r\n    const [isCardMoving, setIsCardMoving] = useState(false);\r\n\r\n    const windowSize = () => {\r\n        if (maximize == '50%') setMaximize('100%')\r\n        else setMaximize('50%')\r\n    }\r\n\r\n    const handleCardMove = useCallback((event) => {\r\n        // console.log({ x: event.clientX, y: event.clientY });\r\n\r\n        let x = event.clientX - off['x'];\r\n        let y = event.clientY - off['y'];\r\n        // console.log({ bx: x, by: y });\r\n        setPosition({ x: x, y: y })\r\n        console.log({ x: off['x'], y: off['y'] });\r\n    }, []);\r\n\r\n    const getMouse = (e: any) => {\r\n        console.log(e.offsetX)\r\n        // setOff({ x: e.offsetX, y: e.offsetY })\r\n        // console.log({ x: off['x'], y: off['y'] });\r\n    }\r\n    const relativeCoords = (event: any) => {\r\n        let bounds = event.target.getBoundingClientRect();\r\n        let x = event.clientX - bounds.left;\r\n        let y = event.clientY - bounds.top;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isCardMoving) window.addEventListener(\"mousemove\", handleCardMove);\r\n        else window.removeEventListener(\"mousemove\", handleCardMove);\r\n        return () => window.removeEventListener(\"mousemove\", handleCardMove);\r\n    }, [isCardMoving, handleCardMove]);\r\n\r\n    return (\r\n        <div className='windowview' style={{ display: display, width: maximize, height: maximize, top: position['y'] + 'px', left: position['x'] + 'px' }}>\r\n            <div className='windowview-toolbar' onClick={(e) => { getMouse(e); setIsCardMoving(!isCardMoving) }}>\r\n                <div></div>\r\n                <div className='windowview-toolbar-buttons'>\r\n                    <div className='windowview-toolbar-buttons-minimize' onClick={() => setDisplay('none')}>\r\n                        <IoMdRemove />\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-maximize' onClick={() => windowSize()}>\r\n                        <IoMdSquareOutline />\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-close' onClick={() => setDisplay('none')}>\r\n                        <IoMdClose />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='windowview-body'>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WindowView\r\n"]},"metadata":{},"sourceType":"module"}