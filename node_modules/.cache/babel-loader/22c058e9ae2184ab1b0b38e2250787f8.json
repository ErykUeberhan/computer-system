{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\WindowView\\\\WindowView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './WindowView.sass';\nimport { IoMdRemove, IoMdSquareOutline, IoMdClose } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFolderOpen, setFolderOpen } from '../../Redux/appSlice';\n\nfunction WindowView() {\n  _s();\n\n  const folderOpen = useSelector(selectFolderOpen);\n  const [display, setDisplay] = useState('flex');\n  const [maximize, setMaximize] = useState('50%');\n  const [screenMode, setScreenMode] = useState({\n    display: 'none'\n  });\n  const [position, setPosition] = useState({\n    x: 480,\n    y: 220\n  });\n  const [off, setOff] = useState({\n    x: 10,\n    y: 10\n  });\n  const [isCardMoving, setIsCardMoving] = useState(false);\n  const dispatch = useDispatch();\n\n  const windowSize = () => {\n    if (maximize == '50%') {\n      setPosition({\n        x: 0,\n        y: 0\n      });\n      setMaximize('100%');\n    } else {\n      setMaximize('50%');\n      setPosition({\n        x: 480,\n        y: 220\n      });\n    }\n  };\n\n  const handleCardMove = event => {\n    let x = event.clientX - off.x;\n    let y = event.clientY - off.y;\n    setPosition({\n      x: x,\n      y: y\n    });\n  };\n\n  const getMouse = e => {\n    setOff({\n      x: e.nativeEvent.offsetX,\n      y: e.nativeEvent.offsetY\n    });\n  };\n\n  useEffect(() => {\n    if (isCardMoving) window.addEventListener(\"mousemove\", handleCardMove);else window.removeEventListener(\"mousemove\", handleCardMove);\n    return () => window.removeEventListener(\"mousemove\", handleCardMove);\n  }, [isCardMoving, handleCardMove]);\n  useEffect(() => {\n    if (folderOpen) setDisplay('flex');else setDisplay('none');\n    return () => setDisplay('none');\n  }, [display, folderOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"windowview\",\n    style: {\n      display: display,\n      width: maximize,\n      height: maximize,\n      top: position['y'] + 'px',\n      left: position['x'] + 'px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-toolbar\",\n      onMouseDown: e => {\n        getMouse(e);\n        setIsCardMoving(true);\n      },\n      onMouseUp: () => {\n        setIsCardMoving(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"windowview-toolbar-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-minimize\",\n          onClick: e => {\n            dispatch(setFolderOpen({\n              folderOpen: !folderOpen\n            }));\n          },\n          onMouseDown: e => {\n            e.stopPropagation();\n          },\n          children: /*#__PURE__*/_jsxDEV(IoMdRemove, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-maximize\",\n          onClick: () => windowSize(),\n          onMouseDown: e => {\n            e.stopPropagation();\n          },\n          children: /*#__PURE__*/_jsxDEV(IoMdSquareOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windowview-toolbar-buttons-close\",\n          onClick: () => setDisplay('none'),\n          onMouseDown: e => {\n            e.stopPropagation();\n          },\n          children: /*#__PURE__*/_jsxDEV(IoMdClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"windowview-body\",\n      onClick: () => console.log(folderOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WindowView, \"mcVAquQgB8yj2Gu+ASKo9fB6OFs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = WindowView;\nexport default WindowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowView\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/WindowView/WindowView.tsx"],"names":["React","useEffect","useState","IoMdRemove","IoMdSquareOutline","IoMdClose","useDispatch","useSelector","selectFolderOpen","setFolderOpen","WindowView","folderOpen","display","setDisplay","maximize","setMaximize","screenMode","setScreenMode","position","setPosition","x","y","off","setOff","isCardMoving","setIsCardMoving","dispatch","windowSize","handleCardMove","event","clientX","clientY","getMouse","e","nativeEvent","offsetX","offsetY","window","addEventListener","removeEventListener","width","height","top","left","stopPropagation","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './WindowView.sass'\r\nimport { IoMdRemove, IoMdSquareOutline, IoMdClose } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectFolderOpen, setFolderOpen } from '../../Redux/appSlice';\r\n\r\nfunction WindowView() {\r\n    const folderOpen = useSelector(selectFolderOpen)\r\n    const [display, setDisplay] = useState('flex')\r\n    const [maximize, setMaximize] = useState('50%')\r\n    const [screenMode, setScreenMode] = useState({\r\n        display: 'none',\r\n    })\r\n    const [position, setPosition] = useState({ x: 480, y: 220 })\r\n    const [off, setOff] = useState({ x: 10, y: 10 })\r\n    const [isCardMoving, setIsCardMoving] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const windowSize = () => {\r\n        if (maximize == '50%') {\r\n            setPosition({ x: 0, y: 0 })\r\n            setMaximize('100%')\r\n        } else {\r\n            setMaximize('50%')\r\n            setPosition({ x: 480, y: 220 })\r\n        }\r\n    }\r\n\r\n    const handleCardMove = (event: any) => {\r\n        let x = event.clientX - off.x;\r\n        let y = event.clientY - off.y;\r\n        setPosition({ x: x, y: y })\r\n    };\r\n\r\n    const getMouse = (e: any) => {\r\n        setOff({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isCardMoving) window.addEventListener(\"mousemove\", handleCardMove);\r\n        else window.removeEventListener(\"mousemove\", handleCardMove);\r\n        return () => window.removeEventListener(\"mousemove\", handleCardMove);\r\n    }, [isCardMoving, handleCardMove]);\r\n\r\n    useEffect(() => {\r\n        if (folderOpen) setDisplay('flex');\r\n        else setDisplay('none');\r\n        return () => setDisplay('none');\r\n    }, [display, folderOpen]);\r\n\r\n    return (\r\n        <div className='windowview' style={{ display: display, width: maximize, height: maximize, top: position['y'] + 'px', left: position['x'] + 'px' }}>\r\n            <div className='windowview-toolbar' onMouseDown={(e) => { getMouse(e); setIsCardMoving(true) }} onMouseUp={() => { setIsCardMoving(false) }}>\r\n                <div></div>\r\n                <div className='windowview-toolbar-buttons'>\r\n                    <div className='windowview-toolbar-buttons-minimize' onClick={(e) => { dispatch(setFolderOpen({ folderOpen: !folderOpen })) }} onMouseDown={(e) => { e.stopPropagation() }}>\r\n                        <IoMdRemove />\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-maximize' onClick={() => windowSize()} onMouseDown={(e) => { e.stopPropagation() }}>\r\n                        <IoMdSquareOutline />\r\n                    </div>\r\n                    <div className='windowview-toolbar-buttons-close' onClick={() => setDisplay('none')} onMouseDown={(e) => { e.stopPropagation() }}>\r\n                        <IoMdClose />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='windowview-body' onClick={() => console.log(folderOpen)}>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WindowView\r\n"]},"metadata":{},"sourceType":"module"}