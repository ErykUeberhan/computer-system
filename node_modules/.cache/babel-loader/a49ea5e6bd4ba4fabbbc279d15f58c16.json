{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\LeftMenu\\\\Bricks\\\\Music\\\\Music.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Music.sass';\nimport { ImSpotify } from 'react-icons/im';\n\nfunction Music() {\n  _s();\n\n  const [token, setToken] = useState();\n  const [name, setName] = useState();\n  const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\n  const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\n  const redirectURL = 'http://localhost:3000';\n\n  const Login = () => {\n    const scopes = 'user-read-private user-read-email';\n    window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId + (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\n  }; // const getToken = async () => {\n  //     const result = await fetch('https://accounts.spotify.com/api/token', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/x-www-form-urlencoded',\n  //             'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n  //         },\n  //         body: {\n  //             'grant_type': 'authorization_code',\n  //             'code': '/authorize endpoint',\n  //             'redirect_uri': \n  //         }\n  //     });\n  //     const data = await result.json();\n  //     return data.access_token;\n  // }\n\n\n  const _getToken = async () => {\n    const result = await fetch('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n      },\n      //body: 'grant_type=client_credentials',\n      body: JSON.stringify({\n        grant_type: 'authorization_code'\n      })\n    }).then(res => res.json()).then(data => {\n      setToken(data.access_token);\n    }).catch(error => console.log(error.message)); // const data = await result.json();\n    // setToken(data.access_token);\n    // return data.access_token;\n  };\n\n  const getNowSong = async () => {\n    const result = await fetch(`https://api.spotify.com/v1/albums/2UQlrrIJQglk4uWWTwvREu/tracks`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      } //scopes: 'user-read-currently-playing',\n\n    }).then(res => res.json()).then(data => console.log(data));\n    console.log(token);\n  };\n\n  const _getTrack = async () => {\n    const result = await fetch(`https://api.spotify.com/v1/tracks/6hTcRuSaaTNwlyIYkkMpWX`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(res => res.json()).then(data => {\n      setName(data.name);\n    }); // const data = await result.json();\n    // return data.name;\n\n    console.log(name);\n  }; //_getTrack();\n\n\n  useEffect(() => {\n    _getToken();\n\n    console.log(token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedin\",\n      children: \"Logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-icon\",\n        onClick: Login,\n        children: /*#__PURE__*/_jsxDEV(ImSpotify, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-button\",\n        onClick: () => getNowSong(),\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Music, \"lSM4z+1MmDcDNZJaqa0/bED7xds=\");\n\n_c = Music;\nexport default Music;\n\nvar _c;\n\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/LeftMenu/Bricks/Music/Music.tsx"],"names":["React","useState","useEffect","ImSpotify","Music","token","setToken","name","setName","clientId","clientSecret","redirectURL","Login","scopes","window","location","href","encodeURIComponent","_getToken","result","fetch","method","headers","btoa","body","JSON","stringify","grant_type","then","res","json","data","access_token","catch","error","console","log","message","getNowSong","_getTrack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Music.sass'\r\nimport { ImSpotify } from 'react-icons/im';\r\n\r\nfunction Music() {\r\n    const [token, setToken] = useState();\r\n    const [name, setName] = useState();\r\n\r\n    const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\r\n    const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\r\n    const redirectURL = 'http://localhost:3000';\r\n\r\n\r\n\r\n    const Login = () => {\r\n        const scopes = 'user-read-private user-read-email';\r\n        window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId +\r\n            (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\r\n    }\r\n\r\n    // const getToken = async () => {\r\n\r\n    //     const result = await fetch('https://accounts.spotify.com/api/token', {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'Content-Type': 'application/x-www-form-urlencoded',\r\n    //             'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n    //         },\r\n    //         body: {\r\n    //             'grant_type': 'authorization_code',\r\n    //             'code': '/authorize endpoint',\r\n    //             'redirect_uri': \r\n    //         }\r\n    //     });\r\n    //     const data = await result.json();\r\n    //     return data.access_token;\r\n    // }\r\n    const _getToken = async () => {\r\n        const result = await fetch('https://accounts.spotify.com/api/token', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n            },\r\n            //body: 'grant_type=client_credentials',\r\n            body: JSON.stringify({\r\n                grant_type: 'authorization_code'\r\n            }),\r\n        }).then(res => res.json()).then((data) => { setToken(data.access_token) }).catch(error => console.log(error.message));\r\n\r\n        // const data = await result.json();\r\n        // setToken(data.access_token);\r\n        // return data.access_token;\r\n    }\r\n\r\n    const getNowSong = async () => {\r\n\r\n        const result = await fetch(`https://api.spotify.com/v1/albums/2UQlrrIJQglk4uWWTwvREu/tracks`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n            //scopes: 'user-read-currently-playing',\r\n        }).then(res => res.json()).then((data) => console.log(data));\r\n        console.log(token)\r\n    }\r\n\r\n    const _getTrack = async () => {\r\n        const result = await fetch(`https://api.spotify.com/v1/tracks/6hTcRuSaaTNwlyIYkkMpWX`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(res => res.json()).then(data => { setName(data.name) })\r\n        // const data = await result.json();\r\n        // return data.name;\r\n        console.log(name);\r\n    }\r\n\r\n    //_getTrack();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        _getToken();\r\n        console.log(token);\r\n    }, []);\r\n\r\n    return (\r\n        <div className='music'>\r\n            <div className='music-loggedin'>\r\n                Logged in\r\n            </div>\r\n            <div className='music-loggedout'>\r\n                <div className='music-loggedout-icon' onClick={Login}>\r\n                    <ImSpotify />\r\n                </div>\r\n                <div className='music-loggedout-button' onClick={() => getNowSong()}>\r\n                    Log in\r\n                </div>\r\n                <div>\r\n                    {name}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n"]},"metadata":{},"sourceType":"module"}