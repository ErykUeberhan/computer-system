{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\LeftMenu\\\\Bricks\\\\Clock.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Clock.sass';\n\nfunction Clock() {\n  _s();\n\n  let date = new Date();\n  const [minutes, setMinutes] = useState(date.getMinutes());\n  let WeekDays;\n\n  (function (WeekDays) {\n    WeekDays[\"Monday\"] = \"Monday\";\n    WeekDays[\"Tuesday\"] = \"Tuesday\";\n    WeekDays[\"Wednesday\"] = \"Wednesday\";\n    WeekDays[\"Thursday\"] = \"Thursday\";\n    WeekDays[\"Friday\"] = \"Friday\";\n    WeekDays[\"Saturday\"] = \"Saturday\";\n    WeekDays[\"Sunday\"] = \"Sunday\";\n  })(WeekDays || (WeekDays = {}));\n\n  const checkDay = day => {\n    switch (day) {\n      case 1:\n        return WeekDays.Monday;\n        break;\n\n      case 2:\n        return WeekDays.Tuesday;\n        break;\n\n      case 3:\n        return WeekDays.Wednesday;\n        break;\n\n      case 4:\n        return WeekDays.Thursday;\n        break;\n\n      case 5:\n        return WeekDays.Friday;\n        break;\n\n      case 6:\n        return WeekDays.Saturday;\n        break;\n\n      case 7:\n        return WeekDays.Sunday;\n        break;\n\n      default:\n        return '';\n    }\n  };\n\n  useEffect(() => {\n    var timerID = setInterval(() => setMinutes(date.getMinutes()), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock-time\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"clock-time-hours\",\n        children: date.getHours() < 9 ? `0${date.getHours()}` : date.getHours()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"clock-time-minutes\",\n        children: minutes < 9 ? `0${minutes}` : minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), date.getSeconds()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clock-day\",\n      children: checkDay(date.getDay())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Clock, \"VuaHXhxQLT2R5C5q54F15EpmdJE=\");\n\n_c = Clock;\nexport default Clock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/LeftMenu/Bricks/Clock.tsx"],"names":["React","useEffect","useState","Clock","date","Date","minutes","setMinutes","getMinutes","WeekDays","checkDay","day","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","timerID","setInterval","cleanup","clearInterval","getHours","getSeconds","getDay"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACb,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAACE,IAAI,CAACI,UAAL,EAAD,CAAtC;AAFa,MAGRC,QAHQ;;AAAA,aAGRA,QAHQ;AAGRA,IAAAA,QAHQ;AAGRA,IAAAA,QAHQ;AAGRA,IAAAA,QAHQ;AAGRA,IAAAA,QAHQ;AAGRA,IAAAA,QAHQ;AAGRA,IAAAA,QAHQ;AAGRA,IAAAA,QAHQ;AAAA,KAGRA,QAHQ,KAGRA,QAHQ;;AAab,QAAMC,QAAQ,GAAIC,GAAD,IAAyB;AACtC,YAAQA,GAAR;AACI,WAAK,CAAL;AACI,eAAOF,QAAQ,CAACG,MAAhB;AACA;;AACJ,WAAK,CAAL;AACI,eAAOH,QAAQ,CAACI,OAAhB;AACA;;AACJ,WAAK,CAAL;AACI,eAAOJ,QAAQ,CAACK,SAAhB;AACA;;AACJ,WAAK,CAAL;AACI,eAAOL,QAAQ,CAACM,QAAhB;AACA;;AACJ,WAAK,CAAL;AACI,eAAON,QAAQ,CAACO,MAAhB;AACA;;AACJ,WAAK,CAAL;AACI,eAAOP,QAAQ,CAACQ,QAAhB;AACA;;AACJ,WAAK,CAAL;AACI,eAAOR,QAAQ,CAACS,MAAhB;AACA;;AACJ;AACI,eAAO,EAAP;AAvBR;AAyBH,GA1BD;;AA4BAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,OAAO,GAAGC,WAAW,CAAC,MAAMb,UAAU,CAACH,IAAI,CAACI,UAAL,EAAD,CAAjB,EAAsC,IAAtC,CAAzB;AACA,WAAO,SAASa,OAAT,GAAmB;AACtBC,MAAAA,aAAa,CAACH,OAAD,CAAb;AACH,KAFD;AAGH,GALQ,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA,kBAAiCf,IAAI,CAACmB,QAAL,KAAkB,CAAlB,GAAuB,IAAGnB,IAAI,CAACmB,QAAL,EAAgB,EAA1C,GAA8CnB,IAAI,CAACmB,QAAL;AAA/E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAA,kBAAmCjB,OAAO,GAAG,CAAV,GAAe,IAAGA,OAAQ,EAA1B,GAA8BA;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKF,IAAI,CAACoB,UAAL,EAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA,gBAA0Bd,QAAQ,CAACN,IAAI,CAACqB,MAAL,EAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAzDQtB,K;;KAAAA,K;AA2DT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Clock.sass'\r\n\r\nfunction Clock() {\r\n    let date = new Date;\r\n    const [minutes, setMinutes] = useState(date.getMinutes())\r\n    enum WeekDays {\r\n        Monday = 'Monday',\r\n        Tuesday = 'Tuesday',\r\n        Wednesday = 'Wednesday',\r\n        Thursday = 'Thursday',\r\n        Friday = 'Friday',\r\n        Saturday = 'Saturday',\r\n        Sunday = 'Sunday'\r\n    }\r\n\r\n    const checkDay = (day: number): string => {\r\n        switch (day) {\r\n            case 1:\r\n                return WeekDays.Monday;\r\n                break;\r\n            case 2:\r\n                return WeekDays.Tuesday;\r\n                break;\r\n            case 3:\r\n                return WeekDays.Wednesday;\r\n                break;\r\n            case 4:\r\n                return WeekDays.Thursday;\r\n                break;\r\n            case 5:\r\n                return WeekDays.Friday;\r\n                break;\r\n            case 6:\r\n                return WeekDays.Saturday;\r\n                break;\r\n            case 7:\r\n                return WeekDays.Sunday;\r\n                break;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        var timerID = setInterval(() => setMinutes(date.getMinutes()), 1000);\r\n        return function cleanup() {\r\n            clearInterval(timerID);\r\n        };\r\n    });\r\n    return (\r\n        <div className='clock'>\r\n            <div className='clock-time'>\r\n                <p className='clock-time-hours'>{date.getHours() < 9 ? `0${date.getHours()}` : date.getHours()}</p>\r\n                <p className='clock-time-minutes'>{minutes < 9 ? `0${minutes}` : minutes}</p>\r\n                {date.getSeconds()}\r\n            </div>\r\n            <p className='clock-day'>{checkDay(date.getDay())}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n"]},"metadata":{},"sourceType":"module"}