{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\LeftMenu\\\\Bricks\\\\Music\\\\Music.tsx\";\nimport React, { useState } from 'react';\nimport './Music.sass';\nimport { ImSpotify } from 'react-icons/im';\n\nfunction Music() {\n  var _s = $RefreshSig$();\n\n  const SpotifyLogin = () => {\n    _s();\n\n    const [token, setToken] = useState();\n    const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\n    const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\n    const redirectURL = 'http://localhost:3000';\n\n    const Login = () => {\n      const scopes = 'user-read-private user-read-email';\n      window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId + (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\n    }; // const getToken = async () => {\n    //     const result = await fetch('https://accounts.spotify.com/api/token', {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/x-www-form-urlencoded',\n    //             'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n    //         },\n    //         body: {\n    //             'grant_type': 'authorization_code',\n    //             'code': '/authorize endpoint',\n    //             'redirect_uri': \n    //         }\n    //     });\n    //     const data = await result.json();\n    //     return data.access_token;\n    // }\n\n\n    const _getToken = async () => {\n      let token;\n      const result = await fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n        },\n        body: 'grant_type=client_credentials'\n      });\n      const data = await result.json();\n      return data.resolve();\n    };\n\n    const _getTrack = async () => {\n      const result = await fetch(`https://api.spotify.com/v1/tracks/6hTcRuSaaTNwlyIYkkMpWX`, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + _getToken()\n        }\n      }).then(response => response.json()).then(data => console.log(data));\n    };\n\n    console.log(_getToken());\n    console.log(_getTrack());\n  };\n\n  _s(SpotifyLogin, \"2b1Gw51qdmmjpiYzw8hh0YVh/kM=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedin\",\n      children: \"Logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-icon\",\n        children: /*#__PURE__*/_jsxDEV(ImSpotify, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-button\",\n        onClick: SpotifyLogin,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Music;\nexport default Music;\n\nvar _c;\n\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/LeftMenu/Bricks/Music/Music.tsx"],"names":["React","useState","ImSpotify","Music","SpotifyLogin","token","setToken","clientId","clientSecret","redirectURL","Login","scopes","window","location","href","encodeURIComponent","_getToken","result","fetch","method","headers","btoa","body","data","json","resolve","_getTrack","then","response","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,gBAA1B;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AAGb,QAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AAEA,UAAMM,QAAQ,GAAG,kCAAjB;AACA,UAAMC,YAAY,GAAG,kCAArB;AACA,UAAMC,WAAW,GAAG,uBAApB;;AAIA,UAAMC,KAAK,GAAG,MAAM;AAChB,YAAMC,MAAM,GAAG,mCAAf;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,yEAAyEP,QAAzE,IAClBI,MAAM,GAAG,YAAYI,kBAAkB,CAACJ,MAAD,CAAjC,GAA4C,EADhC,IACsC,gBADtC,GACyDI,kBAAkB,CAACN,WAAD,CADlG;AAEH,KAJD,CATuB,CAevB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMO,SAAS,GAAG,YAAY;AAC1B,UAAIX,KAAJ;AACA,YAAMY,MAAM,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,OAAO,EAAE;AACL,0BAAgB,mCADX;AAEL,2BAAiB,WAAWC,IAAI,CAACd,QAAQ,GAAG,GAAX,GAAiBC,YAAlB;AAF3B,SAFwD;AAMjEc,QAAAA,IAAI,EAAE;AAN2D,OAA3C,CAA1B;AASA,YAAMC,IAAI,GAAG,MAAMN,MAAM,CAACO,IAAP,EAAnB;AACA,aAAOD,IAAI,CAACE,OAAL,EAAP;AACH,KAbD;;AAeA,UAAMC,SAAS,GAAG,YAAY;AAE1B,YAAMT,MAAM,GAAG,MAAMC,KAAK,CAAE,0DAAF,EAA6D;AACnFC,QAAAA,MAAM,EAAE,KAD2E;AAEnFC,QAAAA,OAAO,EAAE;AACL,2BAAiB,YAAYJ,SAAS;AADjC;AAF0E,OAA7D,CAAL,CAKlBW,IALkB,CAKbC,QAAQ,IAAIA,QAAQ,CAACJ,IAAT,EALC,EAMhBG,IANgB,CAMXJ,IAAI,IAAIM,OAAO,CAACC,GAAR,CAAYP,IAAZ,CANG,CAArB;AAOH,KATD;;AAUAM,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAS,EAArB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,EAArB;AAEH,GA5DD;;AAHa,KAGPtB,YAHO;;AAkEb,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAwC,QAAA,OAAO,EAAEA,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;KAjFQD,K;AAoFT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './Music.sass'\r\nimport { ImSpotify } from 'react-icons/im';\r\nimport express, { response } from \"express\";\r\n\r\nfunction Music() {\r\n\r\n\r\n    const SpotifyLogin = () => {\r\n        const [token, setToken] = useState();\r\n\r\n        const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\r\n        const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\r\n        const redirectURL = 'http://localhost:3000';\r\n\r\n\r\n\r\n        const Login = () => {\r\n            const scopes = 'user-read-private user-read-email';\r\n            window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId +\r\n                (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\r\n        }\r\n\r\n        // const getToken = async () => {\r\n\r\n        //     const result = await fetch('https://accounts.spotify.com/api/token', {\r\n        //         method: 'POST',\r\n        //         headers: {\r\n        //             'Content-Type': 'application/x-www-form-urlencoded',\r\n        //             'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n        //         },\r\n        //         body: {\r\n        //             'grant_type': 'authorization_code',\r\n        //             'code': '/authorize endpoint',\r\n        //             'redirect_uri': \r\n        //         }\r\n        //     });\r\n        //     const data = await result.json();\r\n        //     return data.access_token;\r\n        // }\r\n        const _getToken = async () => {\r\n            let token;\r\n            const result = await fetch('https://accounts.spotify.com/api/token', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n                },\r\n                body: 'grant_type=client_credentials',\r\n            });\r\n\r\n            const data = await result.json();\r\n            return data.resolve();\r\n        }\r\n\r\n        const _getTrack = async () => {\r\n\r\n            const result = await fetch(`https://api.spotify.com/v1/tracks/6hTcRuSaaTNwlyIYkkMpWX`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + _getToken()\r\n                }\r\n            }).then(response => response.json())\r\n                .then(data => console.log(data));\r\n        }\r\n        console.log(_getToken());\r\n        console.log(_getTrack());\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='music'>\r\n            <div className='music-loggedin'>\r\n                Logged in\r\n            </div>\r\n            <div className='music-loggedout'>\r\n                <div className='music-loggedout-icon'>\r\n                    <ImSpotify />\r\n                </div>\r\n                <div className='music-loggedout-button' onClick={SpotifyLogin}>\r\n                    Log in\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n"]},"metadata":{},"sourceType":"module"}