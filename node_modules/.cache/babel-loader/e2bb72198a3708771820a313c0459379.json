{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\LeftMenu\\\\Bricks\\\\Weather\\\\Weather.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Weather.sass';\n\nfunction Weather() {\n  _s();\n\n  const [temp, setTemp] = useState(0);\n  const [description, setDescription] = useState('l');\n  const [icon, setIcon] = useState(0);\n  const key = \"ef5b7ec63216009ee88d661f0ad92943\";\n  const kelvin = 273;\n\n  if ('geolocation' in navigator) {\n    navigator.geolocation.getCurrentPosition(setPosition, showError);\n  } else {\n    alert('Browser doesnt support geolocation');\n  }\n\n  function setPosition(position) {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    getWeather(latitude, longitude);\n  }\n\n  function showError() {\n    alert('error');\n  }\n\n  function getWeather(latitude, longitude) {\n    // let api = `api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`;\n    let api = `api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=${key}`;\n    console.log(api);\n    fetch(api).then(function (response) {\n      let data = response.text();\n      console.log(data);\n      return data;\n    }).then(function (data) {// setTemp(Math.floor(data.main.temp - kelvin));\n      // setDescription(data.weather[0].description);\n      // setIcon(data.weather[0].icon);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"SZYWAphxPH+inPMmC59vMD+LRKI=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/LeftMenu/Bricks/Weather/Weather.tsx"],"names":["React","useState","Weather","temp","setTemp","description","setDescription","icon","setIcon","key","kelvin","navigator","geolocation","getCurrentPosition","setPosition","showError","alert","position","latitude","coords","longitude","getWeather","api","console","log","fetch","then","response","data","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,GAAD,CAA9C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMQ,GAAW,GAAG,kCAApB;AACA,QAAMC,MAAc,GAAG,GAAvB;;AAEA,MAAI,iBAAiBC,SAArB,EAAgC;AAC5BA,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,WAAzC,EAAsDC,SAAtD;AACH,GAFD,MAEO;AACHC,IAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;;AAED,WAASF,WAAT,CAAqBG,QAArB,EAAyC;AACrC,QAAIC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAA/B;AACA,QAAIE,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAhC;AAEAC,IAAAA,UAAU,CAACH,QAAD,EAAWE,SAAX,CAAV;AACH;;AAED,WAASL,SAAT,GAAqB;AACjBC,IAAAA,KAAK,CAAC,OAAD,CAAL;AACH;;AAED,WAASK,UAAT,CAAoBH,QAApB,EAAsCE,SAAtC,EAA8D;AAC1D;AACA,QAAIE,GAAG,GAAI,gEAA+Db,GAAI,EAA9E;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,IAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACU,UAAUC,QAAV,EAAoB;AACtB,UAAIC,IAAI,GAAGD,QAAQ,CAACE,IAAT,EAAX;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,aAAOA,IAAP;AACH,KALL,EAMKF,IANL,CAMU,UAAUE,IAAV,EAAgB,CAClB;AACA;AACA;AACH,KAVL;AAWH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,gBAAMrB;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,kBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GApDQH,O;;KAAAA,O;AAsDT,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './Weather.sass'\r\n\r\nfunction Weather() {\r\n    const [temp, setTemp] = useState(0);\r\n    const [description, setDescription] = useState('l');\r\n    const [icon, setIcon] = useState(0);\r\n\r\n    const key: string = \"ef5b7ec63216009ee88d661f0ad92943\"\r\n    const kelvin: number = 273;\r\n\r\n    if ('geolocation' in navigator) {\r\n        navigator.geolocation.getCurrentPosition(setPosition, showError);\r\n    } else {\r\n        alert('Browser doesnt support geolocation');\r\n    }\r\n\r\n    function setPosition(position: any): any {\r\n        let latitude = position.coords.latitude\r\n        let longitude = position.coords.longitude\r\n\r\n        getWeather(latitude, longitude);\r\n    }\r\n\r\n    function showError() {\r\n        alert('error');\r\n    }\r\n\r\n    function getWeather(latitude: number, longitude: number): any {\r\n        // let api = `api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`;\r\n        let api = `api.openweathermap.org/data/2.5/weather?lat=35&lon=139&appid=${key}`;\r\n        console.log(api);\r\n        fetch(api)\r\n            .then(function (response) {\r\n                let data = response.text();\r\n                console.log(data);\r\n                return data;\r\n            })\r\n            .then(function (data) {\r\n                // setTemp(Math.floor(data.main.temp - kelvin));\r\n                // setDescription(data.weather[0].description);\r\n                // setIcon(data.weather[0].icon);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='weather'>\r\n            <div>{icon}</div>\r\n            <div>\r\n                <div>{temp}</div>\r\n                <div>{description}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n"]},"metadata":{},"sourceType":"module"}