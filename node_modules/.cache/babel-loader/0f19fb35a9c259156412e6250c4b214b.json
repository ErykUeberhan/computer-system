{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\Pulpit\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\LeftMenu\\\\Bricks\\\\Weather\\\\Weather.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Weather.sass';\nimport { IoSunnySharp, IoPartlySunnySharp, IoCloudySharp, IoRainySharp, IoThunderstormSharp, IoSnowSharp, IoThermometerSharp } from 'react-icons/io5';\nimport { RiMistFill } from 'react-icons/ri';\n\nfunction Weather() {\n  _s();\n\n  let Icons;\n\n  (function (Icons) {\n    Icons[\"ClearDay\"] = \"01d\";\n    Icons[\"PartlySunnyDay\"] = \"02d\";\n    Icons[\"CloudyDay\"] = \"03d\";\n    Icons[\"FogDay\"] = \"04d\";\n    Icons[\"DrizzleDay\"] = \"09d\";\n    Icons[\"RainDay\"] = \"10d\";\n    Icons[\"ThunderstormDay\"] = \"11d\";\n    Icons[\"SnowDay\"] = \"13d\";\n    Icons[\"MistDay\"] = \"50d\";\n    Icons[\"ClearNight\"] = \"01n\";\n    Icons[\"PartlySunnyNight\"] = \"02n\";\n    Icons[\"CloudyNight\"] = \"03n\";\n    Icons[\"FogNight\"] = \"04n\";\n    Icons[\"DrizzleNight\"] = \"09n\";\n    Icons[\"RainNight\"] = \"10n\";\n    Icons[\"ThunderstormNight\"] = \"11n\";\n    Icons[\"SnowNight\"] = \"13n\";\n    Icons[\"MistNight\"] = \"50n\";\n  })(Icons || (Icons = {}));\n\n  const IconChecker = iconId => {\n    switch (iconId) {\n      case Icons.ClearDay:\n        return /*#__PURE__*/_jsxDEV(IoSunnySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 24\n        }, this);\n\n      case Icons.PartlySunnyDay:\n        return /*#__PURE__*/_jsxDEV(IoPartlySunnySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this);\n\n      case Icons.CloudyDay:\n        return /*#__PURE__*/_jsxDEV(IoCloudySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this);\n\n      case Icons.FogDay:\n        return /*#__PURE__*/_jsxDEV(IoCloudySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this);\n\n      case Icons.DrizzleDay:\n        return /*#__PURE__*/_jsxDEV(IoRainySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this);\n\n      case Icons.RainDay:\n        return /*#__PURE__*/_jsxDEV(IoRainySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this);\n\n      case Icons.ThunderstormDay:\n        return /*#__PURE__*/_jsxDEV(IoThunderstormSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this);\n\n      case Icons.SnowDay:\n        return /*#__PURE__*/_jsxDEV(IoSnowSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this);\n\n      case Icons.MistDay:\n        return /*#__PURE__*/_jsxDEV(RiMistFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n\n      case Icons.ClearNight:\n        return /*#__PURE__*/_jsxDEV(IoSunnySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this);\n\n      case Icons.PartlySunnyNight:\n        return /*#__PURE__*/_jsxDEV(IoPartlySunnySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n\n      case Icons.CloudyNight:\n        return /*#__PURE__*/_jsxDEV(IoCloudySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }, this);\n\n      case Icons.FogNight:\n        return /*#__PURE__*/_jsxDEV(IoCloudySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this);\n\n      case Icons.DrizzleNight:\n        return /*#__PURE__*/_jsxDEV(IoRainySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this);\n\n      case Icons.RainNight:\n        return /*#__PURE__*/_jsxDEV(IoRainySharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 24\n        }, this);\n\n      case Icons.ThunderstormNight:\n        return /*#__PURE__*/_jsxDEV(IoThunderstormSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this);\n\n      case Icons.SnowNight:\n        return /*#__PURE__*/_jsxDEV(IoSnowSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this);\n\n      case Icons.MistNight:\n        return /*#__PURE__*/_jsxDEV(RiMistFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this);\n\n      default:\n        return '';\n    }\n  };\n\n  const [temp, setTemp] = useState(0);\n  const [description, setDescription] = useState('');\n  const [icon, setIcon] = useState('');\n  const key = \"ef5b7ec63216009ee88d661f0ad92943\";\n  const kelvin = 273;\n\n  if ('geolocation' in navigator) {\n    navigator.geolocation.getCurrentPosition(setPosition, showError);\n  } else {\n    alert('Browser doesnt support geolocation');\n  }\n\n  function setPosition(position) {\n    let latitude = position.coords.latitude;\n    let longitude = position.coords.longitude;\n    getWeather(latitude, longitude);\n  }\n\n  function showError() {\n    alert('error');\n  }\n\n  function getWeather(latitude, longitude) {\n    let api = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`;\n    fetch(api).then(function (response) {\n      let data = response.json();\n      return data;\n    }).then(function (data) {\n      setTemp(Math.floor(data.main.temp - kelvin));\n      setDescription(data.weather[0].description);\n      setIcon(data.weather[0].icon);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-icon\",\n      children: IconChecker(icon)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info-temp\",\n        children: [temp, \"\\xB0C\", /*#__PURE__*/_jsxDEV(IoThermometerSharp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-info-desc\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Weather, \"Qx3zgK+PDzgbDKEz3FQuDBjyOu4=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/Pulpit/ReactProjects/computer-system/src/Desktop/LeftMenu/Bricks/Weather/Weather.tsx"],"names":["React","useState","IoSunnySharp","IoPartlySunnySharp","IoCloudySharp","IoRainySharp","IoThunderstormSharp","IoSnowSharp","IoThermometerSharp","RiMistFill","Weather","Icons","IconChecker","iconId","ClearDay","PartlySunnyDay","CloudyDay","FogDay","DrizzleDay","RainDay","ThunderstormDay","SnowDay","MistDay","ClearNight","PartlySunnyNight","CloudyNight","FogNight","DrizzleNight","RainNight","ThunderstormNight","SnowNight","MistNight","temp","setTemp","description","setDescription","icon","setIcon","key","kelvin","navigator","geolocation","getCurrentPosition","setPosition","showError","alert","position","latitude","coords","longitude","getWeather","api","fetch","then","response","data","json","Math","floor","main","weather"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport './Weather.sass'\r\nimport { IoSunnySharp, IoPartlySunnySharp, IoCloudySharp, IoRainySharp, IoThunderstormSharp, IoSnowSharp, IoThermometerSharp } from 'react-icons/io5';\r\nimport { RiMistFill } from 'react-icons/ri';\r\n\r\nfunction Weather() {\r\n    enum Icons {\r\n        ClearDay = '01d',\r\n        PartlySunnyDay = '02d',\r\n        CloudyDay = '03d',\r\n        FogDay = '04d',\r\n        DrizzleDay = '09d',\r\n        RainDay = '10d',\r\n        ThunderstormDay = '11d',\r\n        SnowDay = '13d',\r\n        MistDay = '50d',\r\n\r\n        ClearNight = '01n',\r\n        PartlySunnyNight = '02n',\r\n        CloudyNight = '03n',\r\n        FogNight = '04n',\r\n        DrizzleNight = '09n',\r\n        RainNight = '10n',\r\n        ThunderstormNight = '11n',\r\n        SnowNight = '13n',\r\n        MistNight = '50n',\r\n    }\r\n\r\n    const IconChecker = (iconId: string): any => {\r\n        switch (iconId) {\r\n            case Icons.ClearDay:\r\n                return <IoSunnySharp />;\r\n            case Icons.PartlySunnyDay:\r\n                return <IoPartlySunnySharp />;\r\n            case Icons.CloudyDay:\r\n                return <IoCloudySharp />;\r\n            case Icons.FogDay:\r\n                return <IoCloudySharp />;\r\n            case Icons.DrizzleDay:\r\n                return <IoRainySharp />;\r\n            case Icons.RainDay:\r\n                return <IoRainySharp />;\r\n            case Icons.ThunderstormDay:\r\n                return <IoThunderstormSharp />;\r\n            case Icons.SnowDay:\r\n                return <IoSnowSharp />;\r\n            case Icons.MistDay:\r\n                return <RiMistFill />;\r\n\r\n            case Icons.ClearNight:\r\n                return <IoSunnySharp />;\r\n            case Icons.PartlySunnyNight:\r\n                return <IoPartlySunnySharp />;\r\n            case Icons.CloudyNight:\r\n                return <IoCloudySharp />;\r\n            case Icons.FogNight:\r\n                return <IoCloudySharp />;\r\n            case Icons.DrizzleNight:\r\n                return <IoRainySharp />;\r\n            case Icons.RainNight:\r\n                return <IoRainySharp />;\r\n            case Icons.ThunderstormNight:\r\n                return <IoThunderstormSharp />;\r\n            case Icons.SnowNight:\r\n                return <IoSnowSharp />;\r\n            case Icons.MistNight:\r\n                return <RiMistFill />;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    const [temp, setTemp] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [icon, setIcon] = useState('');\r\n\r\n    const key: string = \"ef5b7ec63216009ee88d661f0ad92943\"\r\n    const kelvin: number = 273;\r\n\r\n    if ('geolocation' in navigator) {\r\n        navigator.geolocation.getCurrentPosition(setPosition, showError);\r\n    } else {\r\n        alert('Browser doesnt support geolocation');\r\n    }\r\n\r\n    function setPosition(position: any): any {\r\n        let latitude = position.coords.latitude\r\n        let longitude = position.coords.longitude\r\n\r\n        getWeather(latitude, longitude);\r\n    }\r\n\r\n    function showError() {\r\n        alert('error');\r\n    }\r\n\r\n    function getWeather(latitude: number, longitude: number): any {\r\n        let api = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${key}`;\r\n\r\n        fetch(api)\r\n            .then(function (response) {\r\n                let data = response.json();\r\n                return data;\r\n            })\r\n            .then(function (data) {\r\n                setTemp(Math.floor(data.main.temp - kelvin));\r\n                setDescription(data.weather[0].description);\r\n                setIcon(data.weather[0].icon);\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='weather'>\r\n            <div className='weather-icon'>\r\n                {IconChecker(icon)}\r\n            </div>\r\n            <div className='weather-info'>\r\n                <div className='weather-info-temp'>{temp}°C<IoThermometerSharp /></div>\r\n                <div className='weather-info-desc'>{description}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n"]},"metadata":{},"sourceType":"module"}