{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\eryko\\\\Desktop\\\\ReactProjects\\\\computer-system\\\\src\\\\Desktop\\\\LeftMenu\\\\Bricks\\\\Music\\\\Music.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Music.sass';\nimport { ImSpotify } from 'react-icons/im';\nimport { IoIosSkipBackward, IoIosSkipForward, IoIosPlay, IoIosPause } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectTokenSpotify, setSpotifyAPI } from '../../../../Redux/appSlice';\n\nfunction Music() {\n  _s();\n\n  const [playState, setPlayState] = useState(true);\n  const [song, setSong] = useState({\n    title: '',\n    artist: '',\n    cover: ''\n  });\n  const [code, setCode] = useState('');\n  const token = useSelector(selectTokenSpotify);\n  const dispatch = useDispatch();\n  const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\n  const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\n  const redirectURL = 'http://localhost:3000/callback';\n\n  window.onSpotifyWebPlaybackSDKReady = () => {\n    const player = new Spotify.Player({\n      name: 'Web Playback SDK Quick Start Player',\n      getOAuthToken: cb => {\n        cb(token);\n      },\n      volume: 0.5\n    }); // Error handling\n\n    player.addListener('initialization_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    player.addListener('authentication_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    player.addListener('account_error', ({\n      message\n    }) => {\n      console.error(message);\n    });\n    player.addListener('playback_error', ({\n      message\n    }) => {\n      console.error(message);\n    }); // Playback status updates\n\n    player.addListener('player_state_changed', state => {\n      console.log(state);\n    }); // Ready\n\n    player.addListener('ready', ({\n      device_id\n    }) => {\n      console.log('Ready with Device ID', device_id);\n    }); // Not Ready\n\n    player.addListener('not_ready', ({\n      device_id\n    }) => {\n      console.log('Device ID has gone offline', device_id);\n    }); // Connect to the player!\n\n    player.connect();\n  };\n\n  const Login = () => {\n    const scopes = 'streaming user-read-private user-read-email user-read-currently-playing user-read-playback-state user-modify-playback-state user-library-read';\n    window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId + (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\n  };\n\n  const _getToken = async () => {\n    if (code) {\n      const result = await fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n        },\n        body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectURL}`\n      }).then(res => res.json()).then(data => {\n        if (!token) {\n          dispatch(setSpotifyAPI({\n            tokenSpotify: data.access_token\n          }));\n        }\n      });\n    }\n  };\n\n  const getNowSong = async () => {\n    const result = await fetch(`https://api.spotify.com/v1/me/player`, {\n      method: 'GET',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(res => res.json()).then(data => {\n      setSong({ ...song,\n        title: data.item.name,\n        artist: data.item.artists[0].name,\n        cover: data.item.album.images[1].url\n      });\n    });\n  };\n\n  const getUserDevices = async () => {\n    await fetch(`https://api.spotify.com/v1/me/player/devices`, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(res => res.json()).then(data => console.log(data));\n  };\n\n  const playbackPause = async () => {\n    await fetch(`https://api.spotify.com/v1/me/player/pause`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n  };\n\n  const playbackStart = async () => {\n    await fetch(`https://api.spotify.com/v1/me/player/play`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n  };\n\n  const playbackNext = async () => {\n    await fetch(`https://api.spotify.com/v1/me/player/next`, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    setTimeout(() => getNowSong(), 200);\n  };\n\n  const playbackBackward = async () => {\n    await fetch(`https://api.spotify.com/v1/me/player/previous`, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    setTimeout(() => getNowSong(), 200);\n  };\n\n  useEffect(() => {\n    let hash = document.URL.split('=')[1];\n    setCode(hash);\n\n    _getToken();\n  }, [code]);\n  useEffect(() => {\n    if (token) setTimeout(() => getNowSong(), 200);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music\",\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedin\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedin-image\",\n        onClick: () => {\n          getNowSong();\n          console.log(token);\n        },\n        children: song.cover ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedin-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-loggedin-info-title\",\n          children: song.title.length > 12 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"music-loggedin-info-title-textscroll\",\n              style: {\n                animation: `music ${song.title.length * (3 / 4)}s linear infinite`\n              },\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"music-loggedin-info-title-textscrollrepeat\",\n              style: {\n                animation: `musicRepeat ${song.title.length * (3 / 4)}s linear ${song.title.length * (3 / 4 / 2)}s infinite`\n              },\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"music-loggedin-info-title-text\",\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-loggedin-info-player\",\n          children: [/*#__PURE__*/_jsxDEV(IoIosSkipBackward, {\n            className: \"music-loggedin-info-player-backward\",\n            onClick: () => {\n              playbackBackward();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), playState ? /*#__PURE__*/_jsxDEV(IoIosPlay, {\n            className: \"music-loggedin-info-player-play\",\n            onClick: () => {\n              playbackStart();\n              setPlayState(!playState);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(IoIosPause, {\n            className: \"music-loggedin-info-player-pause\",\n            onClick: () => {\n              playbackPause();\n              setPlayState(!playState);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(IoIosSkipForward, {\n            className: \"music-loggedin-info-player-forward\",\n            onClick: () => {\n              playbackNext();\n              getNowSong();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-loggedin-info-artist\",\n          onClick: getUserDevices,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"music-loggedin-info-artist-text\",\n            children: song.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"music-loggedout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-icon\",\n        onClick: () => {\n          getNowSong();\n          console.log(token);\n        },\n        children: /*#__PURE__*/_jsxDEV(ImSpotify, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-loggedout-button\",\n        onClick: () => {\n          Login();\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Music, \"+KoUTseQPWI6VSoXbj+GJOnjxkI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Music;\nexport default Music;\n\nvar _c;\n\n$RefreshReg$(_c, \"Music\");","map":{"version":3,"sources":["C:/Users/eryko/Desktop/ReactProjects/computer-system/src/Desktop/LeftMenu/Bricks/Music/Music.tsx"],"names":["React","useState","useEffect","ImSpotify","IoIosSkipBackward","IoIosSkipForward","IoIosPlay","IoIosPause","useDispatch","useSelector","selectTokenSpotify","setSpotifyAPI","Music","playState","setPlayState","song","setSong","title","artist","cover","code","setCode","token","dispatch","clientId","clientSecret","redirectURL","window","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","name","getOAuthToken","cb","volume","addListener","message","console","error","state","log","device_id","connect","Login","scopes","location","href","encodeURIComponent","_getToken","result","fetch","method","headers","btoa","body","then","res","json","data","tokenSpotify","access_token","getNowSong","item","artists","album","images","url","getUserDevices","playbackPause","playbackStart","playbackNext","setTimeout","playbackBackward","hash","document","URL","split","length","animation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './Music.sass'\r\nimport { ImSpotify } from 'react-icons/im';\r\nimport { IoIosSkipBackward, IoIosSkipForward, IoIosPlay, IoIosPause } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectTokenSpotify, setSpotifyAPI } from '../../../../Redux/appSlice'\r\n\r\nfunction Music() {\r\n    const [playState, setPlayState] = useState(true);\r\n    const [song, setSong] = useState({\r\n        title: '',\r\n        artist: '',\r\n        cover: '',\r\n    });\r\n    const [code, setCode] = useState('');\r\n    const token = useSelector(selectTokenSpotify);\r\n    const dispatch = useDispatch();\r\n\r\n    const clientId = '5523ece294ee4a3a9a70b4b288e6994a';\r\n    const clientSecret = '035176ad27ae4e5483e9c83afafbc325';\r\n    const redirectURL = 'http://localhost:3000/callback';\r\n\r\n    window.onSpotifyWebPlaybackSDKReady = () => {\r\n        const player = new Spotify.Player({\r\n            name: 'Web Playback SDK Quick Start Player',\r\n            getOAuthToken: cb => { cb(token); },\r\n            volume: 0.5\r\n        });\r\n\r\n        // Error handling\r\n        player.addListener('initialization_error', ({ message }) => { console.error(message); });\r\n        player.addListener('authentication_error', ({ message }) => { console.error(message); });\r\n        player.addListener('account_error', ({ message }) => { console.error(message); });\r\n        player.addListener('playback_error', ({ message }) => { console.error(message); });\r\n\r\n        // Playback status updates\r\n        player.addListener('player_state_changed', state => { console.log(state); });\r\n\r\n        // Ready\r\n        player.addListener('ready', ({ device_id }) => {\r\n            console.log('Ready with Device ID', device_id);\r\n        });\r\n\r\n        // Not Ready\r\n        player.addListener('not_ready', ({ device_id }) => {\r\n            console.log('Device ID has gone offline', device_id);\r\n        });\r\n\r\n        // Connect to the player!\r\n        player.connect();\r\n    };\r\n\r\n    const Login = () => {\r\n        const scopes = 'streaming user-read-private user-read-email user-read-currently-playing user-read-playback-state user-modify-playback-state user-library-read';\r\n        window.location.href = 'https://accounts.spotify.com/authorize?response_type=code&client_id=' + clientId +\r\n            (scopes ? '&scope=' + encodeURIComponent(scopes) : '') + '&redirect_uri=' + encodeURIComponent(redirectURL);\r\n    }\r\n\r\n    const _getToken = async () => {\r\n        if (code) {\r\n            const result = await fetch('https://accounts.spotify.com/api/token', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\r\n                },\r\n                body: `grant_type=authorization_code&code=${code}&redirect_uri=${redirectURL}`,\r\n            }).then(res => res.json()).then((data) => { if (!token) { dispatch(setSpotifyAPI({ tokenSpotify: data.access_token })) } })\r\n        }\r\n    }\r\n\r\n    const getNowSong = async () => {\r\n        const result = await fetch(`https://api.spotify.com/v1/me/player`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': 'Bearer ' + token\r\n            },\r\n        }).then(res => res.json()).then(data => { setSong({ ...song, title: data.item.name, artist: data.item.artists[0].name, cover: data.item.album.images[1].url }) });\r\n    }\r\n\r\n    const getUserDevices = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/devices`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(res => res.json()).then(data => console.log(data))\r\n    }\r\n\r\n    const playbackPause = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/pause`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n    }\r\n\r\n    const playbackStart = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/play`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n    }\r\n\r\n    const playbackNext = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/next`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        setTimeout(() => getNowSong(), 200);\r\n    }\r\n\r\n    const playbackBackward = async () => {\r\n        await fetch(`https://api.spotify.com/v1/me/player/previous`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        })\r\n        setTimeout(() => getNowSong(), 200);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let hash = document.URL.split('=')[1];\r\n        setCode(hash);\r\n        _getToken();\r\n    }, [code]);\r\n\r\n    useEffect(() => {\r\n        if (token) setTimeout(() => getNowSong(), 200);\r\n    }, [token]);\r\n\r\n    return (\r\n        <div className='music'>\r\n            {\r\n                token ?\r\n                    <div className='music-loggedin'>\r\n                        <div className='music-loggedin-image' onClick={() => { getNowSong(); console.log(token); }}>\r\n                            {\r\n                                song.cover ?\r\n                                    <img src={song.cover} />\r\n                                    :\r\n                                    null\r\n                            }\r\n\r\n                        </div>\r\n                        <div className='music-loggedin-info'>\r\n                            <div className='music-loggedin-info-title'>\r\n                                {\r\n                                    song.title.length > 12 ?\r\n                                        <>\r\n                                            <p className='music-loggedin-info-title-textscroll' style={{ animation: `music ${song.title.length * (3 / 4)}s linear infinite` }}>{song.title}</p>\r\n                                            <p className='music-loggedin-info-title-textscrollrepeat' style={{ animation: `musicRepeat ${song.title.length * (3 / 4)}s linear ${song.title.length * ((3 / 4) / 2)}s infinite` }}>{song.title}</p>\r\n                                        </>\r\n                                        :\r\n                                        <p className='music-loggedin-info-title-text'>{song.title}</p>\r\n                                }\r\n                            </div>\r\n\r\n                            <div className='music-loggedin-info-player'>\r\n                                <IoIosSkipBackward className='music-loggedin-info-player-backward' onClick={() => { playbackBackward() }} />\r\n                                {\r\n                                    playState ?\r\n                                        <IoIosPlay className='music-loggedin-info-player-play' onClick={() => { playbackStart(); setPlayState(!playState) }} />\r\n                                        :\r\n                                        <IoIosPause className='music-loggedin-info-player-pause' onClick={() => { playbackPause(); setPlayState(!playState) }} />\r\n                                }\r\n\r\n\r\n                                <IoIosSkipForward className='music-loggedin-info-player-forward' onClick={() => { playbackNext(); getNowSong() }} />\r\n                            </div>\r\n                            <div className='music-loggedin-info-artist' onClick={getUserDevices}>\r\n                                <p className='music-loggedin-info-artist-text'>{song.artist}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    :\r\n                    <div className='music-loggedout'>\r\n                        <div className='music-loggedout-icon' onClick={() => { getNowSong(); console.log(token) }}>\r\n                            <ImSpotify />\r\n                        </div>\r\n                        <div className='music-loggedout-button' onClick={() => { Login() }}>\r\n                            Log in\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\n\r\nexport default Music\r\n"]},"metadata":{},"sourceType":"module"}